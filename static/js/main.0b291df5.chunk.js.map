{"version":3,"sources":["../../../dist/index.js","components/common/CodeBlock.tsx","config/index.tsx","components/AppContainer/components/DemoInitialization/index.tsx","components/AppContainer/components/DemoUseFsActivate/index.tsx","components/AppContainer/components/DemoUseFsModifications/index.tsx","components/AppContainer/components/DemoUseFsSynchronize/index.tsx","components/AppContainer/components/DemoUseFlagship/index.tsx","components/AppContainer/components/DemoErrorBoundary/index.tsx","components/AppContainer/index.tsx","components/AppHeader/index.tsx","App.tsx","serviceWorker.ts","index.tsx","../../../dist/FlagshipContext.js","assets/Flagship-horizontal-product-white.png","../../../dist/FlagshipErrorBoundary.js","../../../dist/lib/loggerHelper.js","../../../dist/FlagshipHooks.js"],"names":["__export","m","p","exports","hasOwnProperty","Object","defineProperty","value","SyntaxHighlighter","registerLanguage","jsx","CodeBlock","className","codeString","language","style","darcula","showLineNumbers","config","envId","sdkConfig","fetchNow","enableConsoleLogs","enableErrorLayout","nodeEnv","visitorData","id","context","isAuth","numberTransaction","isVip","sandbox","visitorId","DemoInitialization","name","contextTemp","useContext","SettingContext","currSettings","currentSettings","setSettings","React","useState","newSettings","setNewSettings","handleVisitorContext","e","node","JSON","parse","currentTarget","parentElement","innerText","temp","checked","keyToRemove","keys","entries","reduce","reducer","key","Row","Col","Alert","variant","Heading","stringify","borderBottom","marginBottom","paddingBottom","Form","Group","controlId","display","alignItems","marginLeft","Control","as","onChange","target","map","Check","type","label","justifyContent","Button","onClick","Label","DemoUseFsActivate","useFsActivate","DemoUseFsModifications","fsModifications","useFsModifications","defaultValue","activate","backgroundColor","btnColor","DemoUseFsSynchronize","listenedValue","setValue","activateAllModifications","setActivate","useFsSynchronize","DemoUseFlagship","output","useFlagship","modifications","requested","fsStatus","status","fsHit","hit","href","send","data","transactionId","affiliation","totalRevenue","shippingCost","shippingMethod","currency","taxes","paymentMethod","itemCount","couponCode","documentLocation","pageTitle","mockHit1","mockHit2","sendMultiple","DemoErrorBoundary","triggerError","setTriggerError","useEffect","Error","AppContainer","Container","AppHeader","Navbar","fixed","Brand","alt","src","Logo","Nav","Link","NavDropdown","title","Item","eventKey","inline","createContext","App","Provider","onInitStart","console","log","onInitDone","onUpdate","loadingComponent","xs","color","height","fontSize","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","__assign","this","assign","t","s","i","n","arguments","length","prototype","call","apply","__spreadArrays","il","r","Array","k","a","j","jl","__importStar","mod","__esModule","result","__importDefault","react_1","js_sdk_1","FlagshipErrorBoundary_1","loggerHelper_1","initState","fsVisitor","isLoading","lastRefresh","hasError","FlagshipContext","default","state","setState","FlagshipProvider","_a","children","initialModifications","onSavingModificationsInCache","_b","getLogger","_c","setError","visitorInstance","start","createVisitor","fetchedModifications","on","args","Date","toISOString","campaigns","values","createElement","customerChildren","onError","error","sdkSettings","Fragment","defaultProps","undefined","FlagshipConsumer","Consumer","module","__extends","_extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","create","btnStyle","verticalAlign","border","padding","lineHeight","borderRadius","transition","FlagshipErrorBoundary","_super","props","_this","errorInfo","isCollapse","componentDidCatch","fatal","stack","minHeight","position","zIndex","bottom","width","opacity","flexDirection","marginTop","maxHeight","overflow","whiteSpace","Component","loggerHelper","timestamp","slice","warn","str","info","debug","FlagshipContext_1","reportNoVisitor","modificationKeys","applyEffectScope","activateModifications","synchronizeModifications","safeMode_getCacheModifications","modificationsRequested","modifRequested","newReducer","getCacheModifications","getModifications","activateAll","_d","_e","logSdkNotReady","sendHit","hits","sendHits","bind"],"mappings":"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","file":"static/js/main.0b291df5.chunk.js","sourcesContent":["\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__export(require(\"./FlagshipContext\"));\n\n__export(require(\"./FlagshipHooks\"));","import React from 'react';\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport jsx from 'react-syntax-highlighter/dist/esm/languages/prism/jsx';\nimport { darcula } from 'react-syntax-highlighter/dist/esm/styles/prism';\nSyntaxHighlighter.registerLanguage('jsx', jsx);\n\ntype CodeBlockProps = {\n    className?: string;\n    codeString: string;\n};\n\nconst CodeBlock: React.FC<CodeBlockProps> = ({ className, codeString }) => {\n    return (\n        <div className={className}>\n            <SyntaxHighlighter\n                language=\"javascript\"\n                style={darcula}\n                showLineNumbers\n            >\n                {codeString}\n            </SyntaxHighlighter>\n        </div>\n    );\n};\n\nexport default CodeBlock;\n","import { FlagshipReactSdkConfig } from '../../../../dist';\n\nconst sdkSettings: FlagshipReactSdkConfig = {\n    fetchNow: true,\n    enableConsoleLogs: true,\n    enableErrorLayout: true,\n    nodeEnv: 'development'\n};\n\nconst config = {\n    envId: 'bn1ab7m56qolupi5sa0g',\n    sdkConfig: sdkSettings,\n    visitorData: {\n        id: 'test-vid',\n        context: { isAuth: true, numberTransaction: 12, isVip: false }\n    },\n    sandbox: {\n        envId: [\n            'bn1ab7m56qolupi5sa0g',\n            'bn1ab7m56qolupi5sa0g_1',\n            'bn1ab7m56qolupi5sa0g_2'\n        ],\n        nodeEnv: ['development', 'production'],\n        visitorId: ['test-vid', 'test-vid_2', 'test-vid_3']\n    }\n};\nexport default config;\n","import CodeBlock from '../../../common/CodeBlock';\nimport React, { useContext } from 'react';\nimport { Alert, Button, Col, Form, Row } from 'react-bootstrap';\n\nimport { AppSettings, SdkSettings, SettingContext } from '../../../../App';\nimport config from '../../../../config';\n\nexport const DemoInitialization = () => {\n    const name = 'initialization';\n    const contextTemp = { ...config.visitorData.context };\n    const { currentSettings: currSettings, setSettings } = useContext(\n        SettingContext\n    ) as AppSettings;\n    const [newSettings, setNewSettings] = React.useState<SdkSettings>({\n        ...currSettings\n    });\n    const handleEnvId = (e) =>\n        setNewSettings({ ...newSettings, envId: e.target.value });\n\n    const handleNodeEnv = (e) =>\n        setNewSettings({\n            ...newSettings,\n            sdkConfig: {\n                ...newSettings.sdkConfig,\n                nodeEnv: e.target.value\n            }\n        });\n\n    const handleVisitorId = (e) =>\n        setNewSettings({\n            ...newSettings,\n            visitorData: {\n                ...newSettings.visitorData,\n                id: e.target.value\n            }\n        });\n\n    const handleVisitorContext = (e) => {\n        const node = JSON.parse(e.currentTarget.parentElement.innerText);\n        const temp = { ...newSettings };\n        if (e.currentTarget.checked) {\n            setNewSettings({\n                ...newSettings,\n                visitorData: {\n                    ...newSettings.visitorData,\n                    context: { ...newSettings.visitorData.context, ...node }\n                }\n            });\n        } else {\n            const keyToRemove = Object.keys(node)[0];\n            setNewSettings({\n                ...newSettings,\n                visitorData: {\n                    ...newSettings.visitorData,\n                    context: Object.entries(temp.visitorData.context).reduce(\n                        (reducer, [key, value]) => {\n                            if (key === keyToRemove) {\n                                return reducer;\n                            }\n                            return { ...reducer, [key]: value };\n                        },\n                        {}\n                    )\n                }\n            });\n        }\n    };\n    return (\n        <Row>\n            <Col>\n                <div className=\"fsAnchor\" id={name} />\n                <Alert variant=\"dark\" className=\"fs-alert demoHook\">\n                    <Alert.Heading>{name}</Alert.Heading>\n                    <p>\n                        The <b>{name}</b> is proceed with{' '}\n                        <b>FlagshipProvider</b>. In this demo app, it is plugged\n                        like so:\n                    </p>\n                    <CodeBlock\n                        className=\"mv3\"\n                        codeString={`import React from 'react';\nimport { FlagshipProvider } from \"@flagship.io/react-sdk\";\n\nconst App: React.FC = () => (\n  <>\n      <FlagshipProvider\n      envId={${currSettings.envId}}\n      config={\n        ${JSON.stringify(currSettings.sdkConfig, null, 2)}\n      }\n      visitorData={\n        ${JSON.stringify(currSettings.visitorData, null, 2)}\n    }\n      onInitStart={() => {\n        console.log(\"init start\");\n      }}\n      onInitDone={() => {\n        console.log(\"init done\");\n      }}\n      onUpdate={({ fsModifications }) => {\n        console.log(\n            'React SDK updated with modifications:' + JSON.stringify(fsModifications)\n        );\n      }}\n      loadingComponent={\n        <Container className=\"mt3\">\n          <Row>\n            <Col xs={12}>Loading Flagship React SDK...</Col>\n          </Row>\n        </Container>\n      }\n    >\n      <Header />\n      <AppContainer />\n    </FlagshipProvider>\n  </>\n);          `}\n                    />\n                    <p>\n                        To understand impact of each props, you can change some\n                        value dynamically here:{' '}\n                    </p>\n                    <h3\n                        style={{\n                            borderBottom: '1px solid grey',\n                            marginBottom: '16px',\n                            paddingBottom: '8px'\n                        }}\n                    >\n                        1 - Playing with <i>config</i>\n                    </h3>\n                    <Form>\n                        <Form.Group\n                            controlId=\"initForm.Control1.1\"\n                            style={{\n                                display: 'flex',\n                                alignItems: 'center',\n                                marginLeft: '16px'\n                            }}\n                        >\n                            <div>envId: </div>\n                            <Form.Control as=\"select\" onChange={handleEnvId}>\n                                {config.sandbox.envId.map((id) => (\n                                    <option key={id}>{id}</option>\n                                ))}\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group\n                            controlId=\"initForm.Control1.11\"\n                            style={{\n                                display: 'flex',\n                                alignItems: 'center',\n                                marginLeft: '16px'\n                            }}\n                        >\n                            <div>nodeEnv: </div>\n                            <Form.Control as=\"select\" onChange={handleNodeEnv}>\n                                {config.sandbox.nodeEnv.map((id) => (\n                                    <option key={id}>{id}</option>\n                                ))}\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId=\"initForm.Control1.2\">\n                            <Form.Check\n                                type=\"checkbox\"\n                                checked={newSettings.sdkConfig.fetchNow}\n                                onChange={(e) =>\n                                    setNewSettings({\n                                        ...newSettings,\n                                        sdkConfig: {\n                                            ...newSettings.sdkConfig,\n                                            fetchNow: e.currentTarget.checked\n                                        }\n                                    })\n                                }\n                                label={`fetchNow=${newSettings.sdkConfig.fetchNow}`}\n                            />\n                        </Form.Group>\n                        <Form.Group controlId=\"initForm.Control1.3\">\n                            <Form.Check\n                                type=\"checkbox\"\n                                checked={\n                                    newSettings.sdkConfig.enableConsoleLogs\n                                }\n                                onChange={(e) =>\n                                    setNewSettings({\n                                        ...newSettings,\n                                        sdkConfig: {\n                                            ...newSettings.sdkConfig,\n                                            enableConsoleLogs:\n                                                e.currentTarget.checked\n                                        }\n                                    })\n                                }\n                                label={`enableConsoleLogs=${newSettings.sdkConfig.enableConsoleLogs}`}\n                            />\n                        </Form.Group>\n                        <Form.Group controlId=\"initForm.Control1.4\">\n                            <Form.Check\n                                type=\"checkbox\"\n                                checked={\n                                    newSettings.sdkConfig.enableErrorLayout\n                                }\n                                onChange={(e) =>\n                                    setNewSettings({\n                                        ...newSettings,\n                                        sdkConfig: {\n                                            ...newSettings.sdkConfig,\n                                            enableErrorLayout:\n                                                e.currentTarget.checked\n                                        }\n                                    })\n                                }\n                                label={`enableErrorLayout=${newSettings.sdkConfig.enableErrorLayout}`}\n                            />\n                        </Form.Group>\n                    </Form>\n                    <div\n                        style={{\n                            display: 'flex',\n                            justifyContent: 'flex-end'\n                        }}\n                    >\n                        <Button\n                            variant=\"secondary\"\n                            onClick={() => setSettings({ ...newSettings })}\n                        >\n                            Apply change\n                        </Button>\n                    </div>\n                    <h3>\n                        2 - Playing with <i>visitorData</i>\n                    </h3>\n                    <Form>\n                        <Form.Group controlId=\"initForm.ControlSelect2\">\n                            <Form.Label>visitorId</Form.Label>\n                            <Form.Control\n                                as=\"select\"\n                                onChange={handleVisitorId}\n                            >\n                                {config.sandbox.visitorId.map((id) => (\n                                    <option key={id}>{id}</option>\n                                ))}\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId=\"initForm.ControlSelect3\">\n                            <Form.Label>visitor context</Form.Label>\n                            {Object.entries(contextTemp).map(([key, value]) => (\n                                <Form.Check\n                                    key={key}\n                                    type=\"checkbox\"\n                                    id={`default-${key}`}\n                                    checked={newSettings.visitorData.context.hasOwnProperty(\n                                        key\n                                    )}\n                                    onChange={handleVisitorContext}\n                                    label={JSON.stringify({ [key]: value })}\n                                />\n                            ))}\n                        </Form.Group>\n                    </Form>\n                    <div\n                        style={{\n                            display: 'flex',\n                            justifyContent: 'flex-end'\n                        }}\n                    >\n                        <Button\n                            variant=\"secondary\"\n                            onClick={() => setSettings({ ...newSettings })}\n                        >\n                            Apply change\n                        </Button>\n                    </div>\n                    <div>Since we have set those settings:</div>\n                    <CodeBlock\n                        className=\"mv3\"\n                        codeString={`${JSON.stringify(\n                            currSettings.sdkConfig,\n                            null,\n                            2\n                        )}`}\n                    />\n                    <div>\n                        When you change those values, you can notice the\n                        behavior of the SDK, on logs & network.\n                    </div>\n                    <div>\n                        It will impact the output of Flagship SDK Hooks as well,\n                        take a look below.\n                    </div>\n                </Alert>\n            </Col>\n        </Row>\n    );\n};\n","import { useFsActivate } from '@flagship.io/react-sdk';\nimport CodeBlock from '../../../common/CodeBlock';\nimport React from 'react';\nimport { Alert, Col, Row } from 'react-bootstrap';\n\nexport const DemoUseFsActivate = () => {\n    useFsActivate(['btnColor', 'otherKey1', 'otherKey2']);\n    const demoHookName = 'useFsActivate';\n    return (\n        <Row>\n            <Col>\n                <div className=\"fsAnchor\" id={demoHookName} />\n                <Alert variant=\"dark\" className=\"fs-alert demoHook\">\n                    <Alert.Heading>{demoHookName}</Alert.Heading>\n                    <p>\n                        Use <b>{demoHookName}</b> hook to trigger activation of\n                        a modification:\n                    </p>\n                    <CodeBlock\n                        className=\"mv3\"\n                        codeString={`useFsActivate([\n    'btnColor',\n    'otherKey1',\n    'otherKey2'\n]);                        `}\n                    />\n                    <div>\n                        In this example, keys{' '}\n                        <i>btnColor, otherKey1, otherKey2</i> have been\n                        activated. You can check on networks, a http request\n                        \"activate\" for each key specified in the array.\n                    </div>\n                </Alert>\n            </Col>\n        </Row>\n    );\n};\n","import { useFsModifications } from '@flagship.io/react-sdk';\nimport React from 'react';\nimport { Alert, Col, Row, Button } from 'react-bootstrap';\nimport CodeBlock from '../../../common/CodeBlock';\n\nexport const DemoUseFsModifications = () => {\n    const fsModifications = useFsModifications([\n        {\n            key: 'btnColor',\n            defaultValue: 'green',\n            activate: false\n        }\n    ]);\n    const demoHookName = 'useFsModifications';\n    return (\n        <Row>\n            <Col>\n                <div className=\"fsAnchor\" id={demoHookName} />\n                <Alert variant=\"dark\" className=\"fs-alert demoHook\">\n                    <Alert.Heading>{demoHookName}</Alert.Heading>\n                    <p>\n                        Use <b>{demoHookName}</b> hook to get the modifications:\n                    </p>\n                    <CodeBlock\n                        className=\"mv3\"\n                        codeString={`import { useFsModifications } from '@flagship.io/react-sdk';\nconst fsModifications = useFsModifications([\n  {\n      key: 'btnColor',\n      defaultValue: 'green',\n      activate: false\n  }\n]);              `}\n                    />\n                    <p>Output: </p>\n                    <div>\n                        <Button\n                            variant=\"secondary\"\n                            style={{\n                                backgroundColor: fsModifications.btnColor\n                            }}\n                        >\n                            {`I'm a button customized with Flagship (backgroundColor=${fsModifications.btnColor})`}\n                        </Button>\n                    </div>\n                    <CodeBlock\n                        className=\"mv3\"\n                        codeString={`<Button\n    variant=\"secondary\"\n    style={{\n        backgroundColor: fsModifications.btnColor\n    }}\n>\n    {\\`I'm a button customized with Flagship (backgroundColor=\\${fsModifications.btnColor})\\`}\n</Button>`}\n                    />\n                </Alert>\n            </Col>\n        </Row>\n    );\n};\n","import { useFsSynchronize } from '@flagship.io/react-sdk';\nimport React from 'react';\nimport { Alert, Col, Form, Row } from 'react-bootstrap';\n\nimport CodeBlock from '../../../common/CodeBlock';\n\nexport const DemoUseFsSynchronize: React.FC = () => {\n    const [listenedValue, setValue] = React.useState(false);\n    const [activateAllModifications, setActivate] = React.useState(false);\n    useFsSynchronize([listenedValue], activateAllModifications);\n    const demoHookName = 'useFsSynchronize';\n    return (\n        <Row>\n            <Col>\n                <div className=\"fsAnchor\" id={demoHookName} />\n                <Alert variant=\"dark\" className=\"fs-alert demoHook\">\n                    <Alert.Heading>{demoHookName}</Alert.Heading>\n                    <p>\n                        Use <b>{demoHookName}</b> hook to trigger activation of\n                        a modification:\n                    </p>\n                    <CodeBlock\n                        className=\"mv3\"\n                        codeString={`useFsActivate([listenedValue], activateAllModifications);`}\n                    ></CodeBlock>\n                    <Form>\n                        <Form.Group controlId=\"demoFsSynchronize.ControlSelect1\">\n                            <Form.Label>listenedValue</Form.Label>\n                            <Form.Check\n                                type=\"checkbox\"\n                                checked={listenedValue}\n                                onChange={(e) =>\n                                    setValue(e.currentTarget.checked)\n                                }\n                                label={`listenedValue=${listenedValue}`}\n                            />\n                        </Form.Group>\n                        <Form.Group controlId=\"demoFsSynchronize.ControlSelect2\">\n                            <Form.Label>listenedValue</Form.Label>\n                            <Form.Check\n                                type=\"checkbox\"\n                                checked={activateAllModifications}\n                                onChange={(e) =>\n                                    setActivate(e.currentTarget.checked)\n                                }\n                                label={`activateAllModifications=${activateAllModifications}`}\n                            />\n                        </Form.Group>\n                    </Form>\n                    <div>\n                        Switch value of <b>listenedValue</b> will trigger a\n                        synchronize as it is set in the first argument of{' '}\n                        <b>useFsActivate</b>.\n                    </div>\n                    <div>\n                        You can also notice that enabling{' '}\n                        <b>activateAllModifications</b> to true will modify the\n                        payload sent to the Flagship API and thus trigger an\n                        activate.\n                    </div>\n                </Alert>\n            </Col>\n        </Row>\n    );\n};\n","import { useFlagship, UseFlagshipOutput } from '@flagship.io/react-sdk';\nimport React from 'react';\nimport { Alert, Col, Row, Button } from 'react-bootstrap';\nimport CodeBlock from '../../../common/CodeBlock';\nimport { TransactionHit } from '@flagship.io/js-sdk';\n\nexport const DemoUseFlagship = () => {\n    const fsParams = {\n        modifications: {\n            requested: [\n                {\n                    key: 'btnColor',\n                    defaultValue: 'green',\n                    activate: false\n                }\n            ]\n        }\n    };\n    const output = useFlagship(fsParams);\n    const {\n        modifications: fsModifications,\n        status: fsStatus,\n        hit: fsHit\n    } = output;\n    const demoHookName = 'useFlagship';\n    return (\n        <Row>\n            <Col>\n                <div className=\"fsAnchor\" id={demoHookName} />\n                <Alert variant=\"dark\" className=\"fs-alert demoHook\">\n                    <Alert.Heading>{demoHookName}</Alert.Heading>\n                    <p>\n                        Use <b>{demoHookName}</b> hook to get access to further\n                        stuff such as <i>modifications</i>, <i>sdk status</i>,{' '}\n                        <i>hits</i> :\n                    </p>\n                    <CodeBlock\n                        className=\"mv3\"\n                        codeString={`import { useFlagship } from '@flagship.io/react-sdk';\nconst fsParams = {\n    modifications: {\n        requested: [\n            {\n                key: 'btnColor',\n                defaultValue: 'green',\n                activate: false\n            }\n        ]\n    }\n}\nconst {\n    modifications: fsModifications,\n    status: fsStatus,\n    hit: fsHit,\n} = useFlagship(fsParams);`}\n                    />\n                    <h3>\n                        1 - Playing with <i>fsModifications</i>\n                    </h3>\n                    <p>demo: </p>\n                    <div>\n                        <Button\n                            variant=\"secondary\"\n                            style={{\n                                backgroundColor: fsModifications.btnColor\n                            }}\n                        >\n                            {`I'm a button customized with Flagship (backgroundColor=${fsModifications.btnColor})`}\n                        </Button>\n                    </div>\n                    <CodeBlock\n                        className=\"mv3\"\n                        codeString={`<Button\n    variant=\"secondary\"\n    style={{\n        backgroundColor: fsModifications.btnColor\n    }}\n>\n    {\\`I'm a button customized with Flagship (backgroundColor=\\${fsModifications.btnColor})\\`}\n</Button>`}\n                    />\n                    <h3>\n                        2 - Playing with <i>fsStatus</i>\n                    </h3>\n                    <div style={{ marginBottom: 16 }}>\n                        If you're not familiar with the payload that you should\n                        a provide to the hit you want to send, you'll have all\n                        details available in the{' '}\n                        <a href=\"https://github.com/abtasty/flagship-js-sdk/blob/master/README.md#shape-of-possible-hits-to-send-1\">\n                            SDK JS Hit documentation\n                        </a>\n                        .\n                    </div>\n                    <p>demo with Transaction Hit: </p>\n                    <CodeBlock\n                        className=\"mv3\"\n                        codeString={`\nfsStatus=${JSON.stringify(fsStatus, null, 2)};\n                        `}\n                    />\n                    <h3>\n                        3 - Playing with <i>hits</i>\n                    </h3>\n                    <p>demo: </p>\n                    <CodeBlock\n                        className=\"mv3\"\n                        codeString={`<Button\n    onClick={() => {\n        const mockHit = {\n            type: 'Transaction',\n            data: {\n                transactionId: '12451342423',\n                affiliation: 'myAffiliation',\n                totalRevenue: 999,\n                shippingCost: 888,\n                shippingMethod: 'myShippingMethod',\n                currency: 'myCurrency',\n                taxes: 1234444,\n                paymentMethod: 'myPaymentMethod',\n                itemCount: 2,\n                couponCode: 'myCOUPON',\n                documentLocation:\n                    'http%3A%2F%2Fabtastylab.com%2F60511af14f5e48764b83d36ddb8ece5a%2F',\n                pageTitle: 'myScreen'\n            }\n        };\n        fsHit.send(mockHit);\n    }}\n>\n    Send a transaction hit\n</Button>`}\n                    />\n                    <div>\n                        <Button\n                            variant=\"secondary\"\n                            onClick={() => {\n                                const mockHit = {\n                                    type: 'Transaction',\n                                    data: {\n                                        transactionId: '12451342423',\n                                        affiliation: 'myAffiliation',\n                                        totalRevenue: 999,\n                                        shippingCost: 888,\n                                        shippingMethod: 'myShippingMethod',\n                                        currency: 'myCurrency',\n                                        taxes: 1234444,\n                                        paymentMethod: 'myPaymentMethod',\n                                        itemCount: 2,\n                                        couponCode: 'myCOUPON',\n                                        documentLocation:\n                                            'http%3A%2F%2Fabtastylab.com%2F60511af14f5e48764b83d36ddb8ece5a%2F',\n                                        pageTitle: 'myScreen'\n                                    }\n                                } as {\n                                    type: 'Transaction';\n                                    data: TransactionHit;\n                                };\n                                fsHit.send(mockHit);\n                            }}\n                        >\n                            Send a transaction hit\n                        </Button>\n                    </div>\n                    <CodeBlock\n                        className=\"mv3\"\n                        codeString={`<Button\n    onClick={() => {\n        const mockHit1 = {\n            type: 'Transaction',\n            data: {\n                transactionId: '12451342423',\n                affiliation: 'myAffiliation',\n                totalRevenue: 999,\n                shippingCost: 888,\n                shippingMethod: 'myShippingMethod',\n                currency: 'myCurrency',\n                taxes: 1234444,\n                paymentMethod: 'myPaymentMethod',\n                itemCount: 2,\n                couponCode: 'myCOUPON',\n                documentLocation:\n                    'http%3A%2F%2Fabtastylab.com%2F60511af14f5e48764b83d36ddb8ece5a%2F',\n                pageTitle: 'myScreen'\n            }\n        };\n        const mockHit2 = { ...mockHit1 };\n        mockHit2.data.transactionId = '999';\n        fsHit.sendMultiple([mockHit1, mockHit2]);\n    }}\n>\n    Send multiple transaction hits\n</Button>`}\n                    />\n                    <div>\n                        <Button\n                            variant=\"secondary\"\n                            onClick={() => {\n                                const mockHit1 = {\n                                    type: 'Transaction',\n                                    data: {\n                                        transactionId: '12451342423',\n                                        affiliation: 'myAffiliation',\n                                        totalRevenue: 999,\n                                        shippingCost: 888,\n                                        shippingMethod: 'myShippingMethod',\n                                        currency: 'myCurrency',\n                                        taxes: 1234444,\n                                        paymentMethod: 'myPaymentMethod',\n                                        itemCount: 2,\n                                        couponCode: 'myCOUPON',\n                                        documentLocation:\n                                            'http%3A%2F%2Fabtastylab.com%2F60511af14f5e48764b83d36ddb8ece5a%2F',\n                                        pageTitle: 'myScreen'\n                                    }\n                                } as {\n                                    type: 'Transaction';\n                                    data: TransactionHit;\n                                };\n                                const mockHit2 = { ...mockHit1 } as {\n                                    type: 'Transaction';\n                                    data: TransactionHit;\n                                };\n                                mockHit2.data.transactionId = '999';\n                                fsHit.sendMultiple([mockHit1, mockHit2]);\n                            }}\n                        >\n                            Send multiple transaction hits\n                        </Button>\n                    </div>\n                </Alert>\n            </Col>\n        </Row>\n    );\n};\n","import CodeBlock from '../../../common/CodeBlock';\nimport React from 'react';\nimport { Alert, Col, Row, Button } from 'react-bootstrap';\n\nexport const DemoErrorBoundary = () => {\n    const demoHookName = 'Safe Mode';\n    const [triggerError, setTriggerError] = React.useState(false);\n    React.useEffect(() => {\n        if (triggerError) {\n            throw new Error('Flagship - Creating an error just for test...');\n        }\n        setTriggerError(false);\n    }, [triggerError]);\n    return (\n        <Row>\n            <Col>\n                <div className=\"fsAnchor\" id=\"safeMode\" />\n                <Alert variant=\"dark\" className=\"fs-alert demoHook\">\n                    <Alert.Heading>{demoHookName}</Alert.Heading>\n                    <p>\n                        When an error occurs unexpectedly, the React SDK switch\n                        automatically into <b>{demoHookName}</b>. Thus, default\n                        value of modifications will always be returned.\n                        Moreover, other features will just log an error without\n                        crash. In a node environment other than{' '}\n                        <i>production</i>, you can enable\n                        <i>enableErrorLayout</i> attribute, in the SDK settings{' '}\n                        <a href=\"#initialization\">(Check above)</a>.\n                    </p>\n                    <div>\n                        <Button\n                            variant=\"secondary\"\n                            onClick={() => {\n                                setTriggerError(true);\n                            }}\n                        >\n                            Throw an error\n                        </Button>\n                    </div>\n                </Alert>\n            </Col>\n        </Row>\n    );\n};\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\n\nimport { DemoInitialization } from './components/DemoInitialization';\nimport { DemoUseFsActivate } from './components/DemoUseFsActivate';\nimport { DemoUseFsModifications } from './components/DemoUseFsModifications';\nimport { DemoUseFsSynchronize } from './components/DemoUseFsSynchronize';\nimport { DemoUseFlagship } from './components/DemoUseFlagship';\nimport { DemoErrorBoundary } from './components/DemoErrorBoundary';\n\nexport const AppContainer: React.FC = () => {\n    return (\n        <Container className=\"mt3\">\n            <DemoInitialization />\n            <DemoUseFlagship />\n            <DemoUseFsModifications />\n            <DemoUseFsActivate />\n            <DemoUseFsSynchronize />\n            <DemoErrorBoundary />\n        </Container>\n    );\n};\n","import React from 'react';\nimport { Navbar, Nav, Form, NavDropdown } from 'react-bootstrap';\nimport Logo from '../../assets/Flagship-horizontal-product-white.png';\n\nconst AppHeader: React.FC = () => (\n    <>\n        <Navbar className=\"fsNavbar\" fixed=\"top\">\n            <Navbar.Brand\n                href=\"https://github.com/abtasty/flagship-js-sdk\"\n                className=\"flex item-center\"\n            >\n                <img\n                    alt=\"Logo Flagship\"\n                    src={Logo}\n                    className=\"d-inline-block align-top logoAdjust\"\n                />\n                React SDK (Dev demo)\n            </Navbar.Brand>\n            <Nav className=\"mr-auto fsNav\">\n                <Nav.Link href=\"#initialization\">Initialization</Nav.Link>\n                <NavDropdown title=\"Hooks\" id=\"nav-dropdown\">\n                    <NavDropdown.Item eventKey=\"4.0\" href=\"#useFlagship\">\n                        useFlagship\n                    </NavDropdown.Item>\n                    <NavDropdown.Item eventKey=\"4.1\" href=\"#useFsModifications\">\n                        useFsModifications\n                    </NavDropdown.Item>\n                    <NavDropdown.Item eventKey=\"4.2\" href=\"#useFsActivate\">\n                        useFsActivate\n                    </NavDropdown.Item>\n                    <NavDropdown.Item eventKey=\"4.3\" href=\"#useFsSynchronize\">\n                        useFsSynchronize\n                    </NavDropdown.Item>\n                </NavDropdown>\n                <NavDropdown title=\"Features\" id=\"nav-dropdown\">\n                    <NavDropdown.Item eventKey=\"4.0\" href=\"#useFlagship\">\n                        Get modification(s)\n                    </NavDropdown.Item>\n                    <NavDropdown.Item eventKey=\"4.1\" href=\"#useFsActivate\">\n                        Activate modification(s)\n                    </NavDropdown.Item>\n                    <NavDropdown.Item eventKey=\"4.2\" href=\"#sendHits\">\n                        Send Hit(s)\n                    </NavDropdown.Item>\n                    <NavDropdown.Item eventKey=\"4.4\" href=\"#safeMode\">\n                        Safe Mode\n                    </NavDropdown.Item>\n                </NavDropdown>\n            </Nav>\n\n            <Form inline>\n                <Nav.Link href=\"https://github.com/abtasty/flagship-react-sdk\">\n                    Github\n                </Nav.Link>\n                <Nav.Link href=\"https://www.abtasty.com/solutions-product-teams/\">\n                    What is Flagship ?\n                </Nav.Link>\n            </Form>\n        </Navbar>\n    </>\n);\nexport default AppHeader;\n","import './App.css';\n\nimport {\n    FlagshipProvider,\n    FlagshipReactSdkConfig\n} from '@flagship.io/react-sdk';\nimport React, { createContext, Dispatch, SetStateAction } from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\n\nimport { AppContainer } from './components/AppContainer';\nimport config from './config';\nimport AppHeader from './components/AppHeader';\nimport { FlagshipSdkConfig } from '@flagship.io/js-sdk';\ninterface VisitorContext {\n    [key: string]: any;\n}\nexport interface SdkSettings {\n    envId: string;\n    sdkConfig: FlagshipReactSdkConfig;\n    visitorData: {\n        id: string;\n        context: VisitorContext;\n    };\n}\nexport interface AppSettings {\n    currentSettings: SdkSettings;\n    setSettings: Dispatch<SetStateAction<SdkSettings>>;\n}\n\nexport const SettingContext = createContext<{\n    currentSettings: SdkSettings;\n    setSettings: Dispatch<SetStateAction<SdkSettings>>;\n} | null>(null);\n\nconst App: React.FC = () => {\n    const [currentSettings, setSettings] = React.useState<SdkSettings>({\n        envId: config.envId,\n        sdkConfig: { ...config.sdkConfig },\n        visitorData: { ...config.visitorData }\n    });\n    return (\n        <>\n            <SettingContext.Provider value={{ currentSettings, setSettings }}>\n                <FlagshipProvider\n                    envId={currentSettings.envId}\n                    config={currentSettings.sdkConfig}\n                    visitorData={currentSettings.visitorData}\n                    onInitStart={() => {\n                        console.log('React SDK init start');\n                    }}\n                    onInitDone={() => {\n                        console.log('React SDK init done');\n                    }}\n                    onUpdate={({ fsModifications }) => {\n                        console.log(\n                            'React SDK updated with modifications:\\n' +\n                                JSON.stringify(fsModifications)\n                        );\n                    }}\n                    loadingComponent={\n                        <Container className=\"mt3\">\n                            <Row>\n                                <Col\n                                    xs={12}\n                                    style={{\n                                        color: 'white',\n                                        height: '100vh',\n                                        fontSize: '5vw'\n                                    }}\n                                >\n                                    Loading Flagship React SDK...\n                                </Col>\n                            </Row>\n                        </Container>\n                    }\n                >\n                    <AppHeader />\n                    <AppContainer />\n                </FlagshipProvider>\n            </SettingContext.Provider>\n        </>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n\n  return r;\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar js_sdk_1 = __importDefault(require(\"@flagship.io/js-sdk\"));\n\nvar FlagshipErrorBoundary_1 = __importDefault(require(\"./FlagshipErrorBoundary\"));\n\nvar loggerHelper_1 = __importDefault(require(\"./lib/loggerHelper\"));\n\nvar initState = {\n  fsVisitor: null,\n  log: null,\n  fsModifications: null,\n  status: {\n    isLoading: true,\n    lastRefresh: null,\n    hasError: false\n  }\n};\nvar FlagshipContext = react_1.default.createContext({\n  state: __assign({}, initState),\n  setState: null,\n  hasError: false\n});\n\nexports.FlagshipProvider = function (_a) {\n  var children = _a.children,\n      envId = _a.envId,\n      config = _a.config,\n      visitorData = _a.visitorData,\n      loadingComponent = _a.loadingComponent,\n      initialModifications = _a.initialModifications,\n      onSavingModificationsInCache = _a.onSavingModificationsInCache,\n      onInitStart = _a.onInitStart,\n      onInitDone = _a.onInitDone,\n      onUpdate = _a.onUpdate;\n  var id = visitorData.id,\n      context = visitorData.context;\n\n  var _b = react_1.useState(__assign(__assign({}, initState), {\n    log: loggerHelper_1.default.getLogger(config)\n  })),\n      state = _b[0],\n      setState = _b[1];\n\n  var _c = react_1.useState(false),\n      hasError = _c[0],\n      setError = _c[1];\n\n  var isLoading = state.status.isLoading,\n      fsVisitor = state.fsVisitor;\n  react_1.useEffect(function () {\n    var fsSdk = js_sdk_1.default.start(envId, config);\n    var visitorInstance = fsSdk.createVisitor(id, context);\n    setState(__assign(__assign({}, state), {\n      status: __assign(__assign({}, state.status), {\n        isLoading: true\n      }),\n      fsVisitor: visitorInstance\n    }));\n\n    if (initialModifications) {\n      visitorInstance.fetchedModifications = __assign({}, initialModifications);\n    }\n\n    if (onInitStart) {\n      onInitStart();\n    }\n\n    visitorInstance.on('saveCache', function (args) {\n      if (onSavingModificationsInCache) {\n        onSavingModificationsInCache(args);\n      }\n    });\n    visitorInstance.on('ready', function () {\n      setState(__assign(__assign({}, state), {\n        status: __assign(__assign({}, state.status), {\n          isLoading: false,\n          lastRefresh: new Date().toISOString()\n        }),\n        fsVisitor: visitorInstance,\n        fsModifications: visitorInstance.fetchedModifications && visitorInstance.fetchedModifications.campaigns || null\n      }));\n\n      if (onInitDone) {\n        onInitDone();\n      }\n    });\n  }, __spreadArrays([envId, id], Object.values(config), Object.values(context)));\n  react_1.useEffect(function () {\n    if (!isLoading) {\n      if (onUpdate) {\n        onUpdate({\n          fsModifications: state.fsModifications\n        }, state.fsVisitor);\n      }\n    }\n  }, [state]);\n\n  var handlingDisplay = function handlingDisplay() {\n    var isFirstInit = !fsVisitor;\n\n    if (loadingComponent && isFirstInit) {\n      return react_1.default.createElement(react_1.default.Fragment, null, loadingComponent);\n    }\n\n    return react_1.default.createElement(react_1.default.Fragment, null, children);\n  };\n\n  var handleError = function handleError(error) {\n    setError(!!error);\n  };\n\n  return react_1.default.createElement(FlagshipContext.Provider, {\n    value: {\n      state: state,\n      setState: setState,\n      hasError: hasError\n    }\n  }, react_1.default.createElement(FlagshipErrorBoundary_1.default, {\n    customerChildren: children,\n    onError: handleError,\n    sdkSettings: config,\n    log: state.log\n  }, handlingDisplay()));\n};\n\nexports.FlagshipProvider.defaultProps = {\n  config: {\n    enableErrorLayout: false\n  },\n  loadingComponent: undefined,\n  initialModifications: undefined,\n  onInitStart: function onInitStart() {},\n  onInitDone: function onInitDone() {},\n  onSavingModificationsInCache: function onSavingModificationsInCache() {},\n  onUpdate: function onUpdate() {}\n};\nexports.FlagshipConsumer = FlagshipContext.Consumer;\nexports.default = FlagshipContext;","module.exports = __webpack_public_path__ + \"static/media/Flagship-horizontal-product-white.6e8b90f3.png\";","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar btnStyle = {\n  display: 'inline-block',\n  verticalAlign: 'middle',\n  border: '1px solid transparent',\n  padding: '0.375rem 0.75rem',\n  fontSize: '1rem',\n  lineHeight: 1.5,\n  borderRadius: '0.25rem',\n  marginLeft: '16px',\n  transition: \"background-color 0.15s ease-in-out,\\n        border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out\"\n};\n\nvar FlagshipErrorBoundary = function (_super) {\n  __extends(FlagshipErrorBoundary, _super);\n\n  function FlagshipErrorBoundary(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.state = {\n      error: null,\n      errorInfo: null,\n      isCollapse: false\n    };\n    return _this;\n  }\n\n  FlagshipErrorBoundary.prototype.componentDidCatch = function (error, errorInfo) {\n    this.props.onError(error);\n    this.props.log.fatal(\"An error occurred. The SDK is switching into safe mode:\\n\" + error.stack);\n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    });\n  };\n\n  FlagshipErrorBoundary.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.state,\n        error = _a.error,\n        errorInfo = _a.errorInfo,\n        isCollapse = _a.isCollapse;\n    var _b = this.props,\n        children = _b.children,\n        customerChildren = _b.customerChildren,\n        _c = _b.sdkSettings,\n        nodeEnv = _c.nodeEnv,\n        enableErrorLayout = _c.enableErrorLayout;\n\n    if (errorInfo) {\n      return react_1.default.createElement(react_1.default.Fragment, null, nodeEnv !== 'production' && enableErrorLayout && react_1.default.createElement(\"div\", {\n        className: \"fsErrorDebugContainer\",\n        style: {\n          backgroundColor: 'red',\n          minHeight: '6vh',\n          position: 'fixed',\n          zIndex: 9999,\n          bottom: 0,\n          width: '100%',\n          opacity: isCollapse ? 1 : 0.4,\n          display: 'flex',\n          flexDirection: 'column',\n          padding: '0px 16px',\n          transition: 'opacity 0.5s ease-in-out'\n        }\n      }, react_1.default.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          width: '100%',\n          marginBottom: '8px',\n          marginTop: '8px'\n        }\n      }, react_1.default.createElement(\"h3\", {\n        style: {\n          color: 'white'\n        }\n      }, \"Flagship React SDK has crashed.\"), react_1.default.createElement(\"button\", {\n        style: __assign({}, btnStyle),\n        onClick: function onClick() {\n          _this.setState(__assign(__assign({}, _this.state), {\n            isCollapse: !isCollapse\n          }));\n        }\n      }, isCollapse ? 'Hide details' : 'Show details')), error && react_1.default.createElement(\"div\", {\n        style: {\n          maxHeight: isCollapse ? 200 : 0,\n          overflow: 'auto',\n          color: 'wheat',\n          whiteSpace: 'pre-line',\n          transition: 'max-height 0.5s ease-in-out'\n        }\n      }, \"\" + error.stack)), react_1.default.createElement(\"div\", null, customerChildren));\n    }\n\n    return children;\n  };\n\n  return FlagshipErrorBoundary;\n}(react_1.default.Component);\n\nexports.default = FlagshipErrorBoundary;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar loggerHelper = {\n  getLogger: function getLogger(config, name) {\n    if (config === void 0) {\n      config = {\n        enableConsoleLogs: false,\n        nodeEnv: 'unknown'\n      };\n    }\n\n    if (name === void 0) {\n      name = 'Flagship React SDK';\n    }\n\n    var enableConsoleLogs = config.enableConsoleLogs;\n    var timestamp = \"[\" + new Date().toISOString().slice(11, -5) + \"] - \";\n    return {\n      warn: function warn(str) {\n        return enableConsoleLogs ? console.warn(\"\" + timestamp + name + \" - \" + str) : null;\n      },\n      error: function error(str) {\n        return enableConsoleLogs ? console.error(\"\" + timestamp + name + \" - \" + str) : null;\n      },\n      info: function info(str) {\n        return enableConsoleLogs ? console.log(\"\" + timestamp + name + \" - \" + str) : null;\n      },\n      fatal: function fatal(str) {\n        return enableConsoleLogs ? console.error(\"\" + timestamp + name + \" - Fatal: \" + str) : null;\n      },\n      debug: function debug(str) {\n        return config.nodeEnv !== 'production' && enableConsoleLogs ? console.log(\"\" + timestamp + name + \" - Debug: \" + str) : null;\n      }\n    };\n  }\n};\nexports.default = loggerHelper;","\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = require(\"react\");\n\nvar FlagshipContext_1 = __importDefault(require(\"./FlagshipContext\"));\n\nvar reportNoVisitor = function reportNoVisitor(log) {\n  log.error('sdk not correctly initialized... Make sure fsVisitor is ready.');\n};\n\nexports.useFsActivate = function (modificationKeys, applyEffectScope) {\n  if (applyEffectScope === void 0) {\n    applyEffectScope = [];\n  }\n\n  var state = react_1.useContext(FlagshipContext_1.default).state;\n  react_1.useEffect(function () {\n    var fsVisitor = state.fsVisitor;\n\n    if (!fsVisitor) {\n      reportNoVisitor(state.log);\n    } else {\n      fsVisitor.activateModifications(modificationKeys.map(function (key) {\n        return {\n          key: key\n        };\n      }));\n    }\n  }, applyEffectScope);\n};\n\nexports.useFsSynchronize = function (applyEffectScope, activateAllModifications) {\n  if (applyEffectScope === void 0) {\n    applyEffectScope = [];\n  }\n\n  if (activateAllModifications === void 0) {\n    activateAllModifications = false;\n  }\n\n  var _a = react_1.useContext(FlagshipContext_1.default),\n      state = _a.state,\n      setState = _a.setState;\n\n  react_1.useEffect(function () {\n    var fsVisitor = state.fsVisitor;\n\n    if (!fsVisitor) {\n      reportNoVisitor(state.log);\n    } else {\n      fsVisitor.synchronizeModifications(activateAllModifications).then(function () {\n        if (setState) {\n          setState(__assign(__assign({}, state), {\n            fsVisitor: fsVisitor,\n            status: __assign(__assign({}, state.status), {\n              isLoading: false,\n              lastRefresh: new Date().toISOString()\n            })\n          }));\n        } else {\n          throw new Error('Error: useFsSynchronize > useEffect, setState is undefined');\n        }\n      });\n    }\n  }, applyEffectScope);\n};\n\nvar safeMode_getCacheModifications = function safeMode_getCacheModifications(modificationsRequested, activateAllModifications) {\n  if (activateAllModifications === void 0) {\n    activateAllModifications = false;\n  }\n\n  return modificationsRequested.reduce(function (reducer, modifRequested) {\n    var newReducer = __assign({}, reducer);\n\n    newReducer[modifRequested.key] = modifRequested.defaultValue;\n    return newReducer;\n  }, {});\n};\n\nvar getCacheModifications = function getCacheModifications(fsVisitor, modificationsRequested, activateAllModifications, log) {\n  if (activateAllModifications === void 0) {\n    activateAllModifications = false;\n  }\n\n  if (!fsVisitor) {\n    log.warn('fsVisitor not initialized, returns default value');\n    return safeMode_getCacheModifications(modificationsRequested, activateAllModifications);\n  }\n\n  return fsVisitor.getModifications(modificationsRequested, activateAllModifications);\n};\n\nexports.useFsModifications = function (modificationsRequested, activateAllModifications) {\n  if (activateAllModifications === void 0) {\n    activateAllModifications = false;\n  }\n\n  var _a = react_1.useContext(FlagshipContext_1.default).state,\n      fsVisitor = _a.fsVisitor,\n      log = _a.log;\n  return getCacheModifications(fsVisitor, modificationsRequested, activateAllModifications, log);\n};\n\nexports.useFlagship = function (_a) {\n  var _b = _a.modifications,\n      modificationsRequested = _b.requested,\n      _c = _b.activateAll,\n      activateAllModifications = _c === void 0 ? false : _c;\n\n  var _d = react_1.useContext(FlagshipContext_1.default),\n      hasError = _d.hasError,\n      _e = _d.state,\n      fsVisitor = _e.fsVisitor,\n      status = _e.status,\n      log = _e.log;\n\n  if (hasError) {\n    return {\n      modifications: safeMode_getCacheModifications(modificationsRequested, activateAllModifications),\n      status: status,\n      hit: {\n        send: function send() {\n          log.error('send hit skipped because is out of order.');\n        },\n        sendMultiple: function sendMultiple() {\n          log.error('send multiple hits skipped because is out of order.');\n        }\n      }\n    };\n  }\n\n  var logSdkNotReady = function logSdkNotReady() {\n    log.error('SDK not ready yet.');\n  };\n\n  var send = function send(hit) {\n    if (fsVisitor && fsVisitor.sendHit) {\n      fsVisitor.sendHit(hit);\n    } else {\n      logSdkNotReady();\n    }\n  };\n\n  var sendMultiple = function sendMultiple(hits) {\n    if (fsVisitor && fsVisitor.sendHits) {\n      fsVisitor.sendHits(hits);\n    } else {\n      logSdkNotReady();\n    }\n  };\n\n  send.bind(fsVisitor);\n  sendMultiple.bind(fsVisitor);\n  return {\n    modifications: getCacheModifications(fsVisitor, modificationsRequested, activateAllModifications, log),\n    status: status,\n    hit: {\n      send: send,\n      sendMultiple: sendMultiple\n    }\n  };\n};"],"sourceRoot":""}
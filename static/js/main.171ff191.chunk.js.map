{"version":3,"sources":["../../../dist/lib/loggerHelper.js","../../../dist/FlagshipErrorBoundary.js","../../../dist/FlagshipHooks.js","components/common/CodeBlock.tsx","components/AppContainer/components/DemoInitialization/components/qa/PlayConfig/index.tsx","components/AppContainer/components/DemoInitialization/components/qa/PlayVisitorData/index.tsx","config/index.tsx","components/AppContainer/components/DemoInitialization/components/normal/PlayVisitorData/index.tsx","components/AppContainer/components/DemoInitialization/components/normal/PlayConfig/index.tsx","components/AppContainer/components/DemoInitialization/index.tsx","components/AppContainer/components/DemoUseFsActivate/components/normal/index.tsx","components/AppContainer/components/DemoUseFsActivate/components/qa/index.tsx","components/AppContainer/components/DemoUseFsActivate/index.tsx","components/AppContainer/components/DemoUseFsModifications/components/normal/PlayWithParams/index.tsx","components/AppContainer/components/DemoUseFsModifications/components/qa/PlayWithParams/index.tsx","components/AppContainer/components/DemoUseFsModifications/index.tsx","components/AppContainer/components/DemoUseFsSynchronize/components/normal/index.tsx","components/AppContainer/components/DemoUseFsSynchronize/index.tsx","components/AppContainer/components/DemoUseFlagship/components/normal/PlayWithHits/index.tsx","components/AppContainer/components/DemoUseFlagship/components/qa/PlayWithHits/index.tsx","components/AppContainer/components/DemoUseFlagship/components/qa/PlayWithModifications/index.tsx","components/AppContainer/components/DemoUseFlagship/components/normal/PlayWithModifications/index.tsx","components/AppContainer/components/DemoUseFlagship/index.tsx","components/AppContainer/components/DemoErrorBoundary/index.tsx","components/AppContainer/index.tsx","components/AppHeader/index.tsx","components/QaHeader/components/SettingsModal/index.tsx","components/QaHeader/index.tsx","App.tsx","serviceWorker.ts","index.tsx","../../../dist/FlagshipContext.js","assets/Flagship-horizontal-product-white.png","../../../dist/index.js"],"names":["__importDefault","this","mod","__esModule","Object","defineProperty","exports","value","js_sdk_logs_1","FsLogger","getLogger","config","enableConsoleLogs","nodeEnv","default","__extends","_extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","react_1","btnStyle","display","verticalAlign","border","padding","fontSize","lineHeight","borderRadius","marginLeft","transition","FlagshipErrorBoundary","_super","props","_this","state","error","errorInfo","isCollapse","componentDidCatch","log","fatal","stack","setState","getDerivedStateFromError","componentDidUpdate","prevProps","prevState","onError","render","_a","_b","children","customerChildren","errorProp","_c","sdkSettings","enableErrorLayout","errorCopy","createElement","Fragment","className","style","backgroundColor","minHeight","position","zIndex","bottom","width","opacity","flexDirection","alignItems","marginBottom","marginTop","color","onClick","maxHeight","overflow","whiteSpace","id","Component","FlagshipContext_1","reportNoVisitor","safeModeLog","functionName","useFsActivate","modificationKeys","applyEffectScope","useContext","hasError","useEffect","fsVisitor","activateModifications","map","key","useFsSynchronize","activateAllModifications","synchronizeModifications","then","Error","status","isLoading","lastRefresh","Date","toISOString","safeMode_getCacheModifications","modificationsRequested","reduce","reducer","modifRequested","newReducer","defaultValue","getCacheModifications","getModifications","warn","useFsModifications","useFlagship","options","modifications","requested","activateAll","_d","hit","send","sendMultiple","logSdkNotReady","sendHit","hits","sendHits","bind","SyntaxHighlighter","registerLanguage","jsx","CodeBlock","codeString","language","darcula","showLineNumbers","PlayConfig","SettingContext","currentSettings","setSettings","React","useState","setError","initialValues","envId","settings","sdkConfig","validate","values","errors","onSubmit","setSubmitting","handleSubmit","handleChange","setFieldValue","handleBlur","touched","isValid","Form","noValidate","Group","as","Col","md","controlId","Label","Control","type","name","onChange","isInvalid","Feedback","placeholder","locale","height","jsObject","body","Button","disabled","variant","cursor","PlayVisitorData","vId","visitorData","vContext","context","fetchNow","isAwesome","isEvil","sandbox","visitorId","currSettings","newSettings","setNewSettings","handleVisitorContext","e","node","JSON","parse","currentTarget","parentElement","innerText","temp","checked","keys","keyToRemove","entries","includes","target","filter","Check","label","stringify","justifyContent","QA","setting","toSubmit","DemoInitialization","Row","Alert","Heading","borderBottom","paddingBottom","enabled","PlayWithActivate","toggle","setToggle","PlayWithActivateQA","modificationToActivate","setModificationToActivate","DemoUseFsActivate","PlayWithParams","fsModifications","activate","href","fsParams","setFsParams","output","viewOnly","DemoUseFsModifications","PlayWithSynchronize","listenedValue","setValue","setActivate","DemoUseFsSynchronize","PlayWithHits","fsHit","multipleHitBundle","multipleCodeString","multipleComponent","data","transactionId","affiliation","totalRevenue","shippingCost","shippingMethod","currency","taxes","paymentMethod","itemCount","couponCode","documentLocation","pageTitle","category","action","transactionHitBundle","simpleCodeString","simpleComponent","screenHitBundle","itemHitBundle","price","code","quantity","eventHitBundle","currentTestedHit","setHitToTest","Nav","defaultActiveKey","Item","Link","eventKey","payloads","transaction","screen","event","item","hasError2","setError2","hitPayload","setHitPayload","hitsPayload","setHitsPayload","enableReinitialize","PlayWithModifications","DemoUseFlagship","fsStatus","DemoErrorBoundary","triggerError","setTriggerError","AppContainer","Container","AppHeader","setQA","Navbar","fixed","Brand","alt","src","Logo","NavDropdown","title","inline","SettingsModal","onHide","show","Modal","size","aria-labelledby","Header","closeButton","Title","Body","QaHeader","settingsModal","createContext","App","Provider","onInitStart","console","onInitDone","onUpdate","loadingComponent","xs","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","__spreadArrays","il","r","k","a","j","jl","__importStar","result","js_sdk_1","loggerHelper_1","FlagshipErrorBoundary_1","initState","firstInitSuccess","private","previousFetchedModifications","undefined","FlagshipContext","FlagshipProvider","initialModifications","onSavingModificationsInCache","errorData","tryCatchCallback","callback","computedConfig","visitorInstance","start","createVisitor","on","args","fetchedModifications","defaultProps","FlagshipConsumer","Consumer","useFlagshipContext","module","__export","m"],"mappings":"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","file":"static/js/main.171ff191.chunk.js","sourcesContent":["\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar js_sdk_logs_1 = __importDefault(require(\"@flagship.io/js-sdk-logs\"));\n\nvar FsLogger = {\n  getLogger: function getLogger(config) {\n    if (config === void 0) {\n      config = {\n        enableConsoleLogs: false,\n        nodeEnv: 'unknown'\n      };\n    }\n\n    return js_sdk_logs_1.default.getLogger(config, 'Flagship React SDK');\n  }\n};\nexports.default = FsLogger;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar btnStyle = {\n  display: 'inline-block',\n  verticalAlign: 'middle',\n  border: '1px solid transparent',\n  padding: '0.375rem 0.75rem',\n  fontSize: '1rem',\n  lineHeight: 1.5,\n  borderRadius: '0.25rem',\n  marginLeft: '16px',\n  transition: \"background-color 0.15s ease-in-out,\\n        border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out\"\n};\n\nvar FlagshipErrorBoundary = function (_super) {\n  __extends(FlagshipErrorBoundary, _super);\n\n  function FlagshipErrorBoundary(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.state = {\n      error: _this.props.error,\n      errorInfo: null,\n      isCollapse: false\n    };\n    return _this;\n  }\n\n  FlagshipErrorBoundary.prototype.componentDidCatch = function (error, errorInfo) {\n    this.props.log.fatal(\"An error occurred. The SDK is switching into safe mode:\\n\" + error.stack);\n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    });\n  };\n\n  FlagshipErrorBoundary.getDerivedStateFromError = function (error) {\n    return {\n      error: error\n    };\n  };\n\n  FlagshipErrorBoundary.prototype.componentDidUpdate = function (prevProps, prevState) {\n    if (this.state.error !== prevState.error) {\n      this.props.onError(this.state.error);\n    }\n\n    if (this.props.error !== prevProps.error) {\n      this.props.log.fatal(\"An error occurred. The SDK is switching into safe mode:\\n\" + this.props.error.stack);\n    }\n  };\n\n  FlagshipErrorBoundary.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.state,\n        error = _a.error,\n        isCollapse = _a.isCollapse;\n    var _b = this.props,\n        children = _b.children,\n        customerChildren = _b.customerChildren,\n        errorProp = _b.error,\n        _c = _b.sdkSettings,\n        nodeEnv = _c.nodeEnv,\n        enableErrorLayout = _c.enableErrorLayout;\n\n    if (errorProp || error) {\n      var errorCopy = errorProp || error;\n      return react_1.default.createElement(react_1.default.Fragment, null, nodeEnv !== 'production' && enableErrorLayout && react_1.default.createElement(\"div\", {\n        className: \"fsErrorDebugContainer\",\n        style: {\n          backgroundColor: 'red',\n          minHeight: '6vh',\n          position: 'fixed',\n          zIndex: 9999,\n          bottom: 0,\n          width: '100%',\n          opacity: isCollapse ? 1 : 0.4,\n          display: 'flex',\n          flexDirection: 'column',\n          padding: '0px 16px',\n          transition: 'opacity 0.5s ease-in-out'\n        }\n      }, react_1.default.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          width: '100%',\n          marginBottom: '8px',\n          marginTop: '8px'\n        }\n      }, react_1.default.createElement(\"h3\", {\n        style: {\n          color: 'white'\n        }\n      }, \"Flagship React SDK has crashed.\"), react_1.default.createElement(\"button\", {\n        style: __assign({}, btnStyle),\n        onClick: function onClick() {\n          _this.setState(__assign(__assign({}, _this.state), {\n            isCollapse: !isCollapse\n          }));\n        }\n      }, isCollapse ? 'Hide details' : 'Show details')), errorCopy && react_1.default.createElement(\"div\", {\n        style: {\n          maxHeight: isCollapse ? 200 : 0,\n          overflow: 'auto',\n          color: 'wheat',\n          whiteSpace: 'pre-line',\n          transition: 'max-height 0.5s ease-in-out'\n        }\n      }, \"\" + errorCopy.stack)), react_1.default.createElement(\"div\", {\n        id: \"flagshipSafeModeContainer\"\n      }, customerChildren));\n    }\n\n    return children;\n  };\n\n  return FlagshipErrorBoundary;\n}(react_1.default.Component);\n\nexports.default = FlagshipErrorBoundary;","\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = require(\"react\");\n\nvar FlagshipContext_1 = __importDefault(require(\"./FlagshipContext\"));\n\nvar reportNoVisitor = function reportNoVisitor(log) {\n  if (log) {\n    log.error('sdk not correctly initialized... Make sure fsVisitor is ready.');\n  }\n};\n\nvar safeModeLog = function safeModeLog(log, functionName) {\n  if (log) {\n    log.error(functionName + \" is disabled because the SDK is in safe mode.\");\n  }\n};\n\nexports.useFsActivate = function (modificationKeys, applyEffectScope) {\n  if (applyEffectScope === void 0) {\n    applyEffectScope = [];\n  }\n\n  var _a = react_1.useContext(FlagshipContext_1.default),\n      state = _a.state,\n      hasError = _a.hasError;\n\n  react_1.useEffect(function () {\n    var fsVisitor = state.fsVisitor;\n\n    if (hasError) {\n      return safeModeLog(state.log, 'UseFsActivate');\n    }\n\n    if (!fsVisitor) {\n      reportNoVisitor(state.log);\n    } else {\n      fsVisitor.activateModifications(modificationKeys.map(function (key) {\n        return {\n          key: key\n        };\n      }));\n    }\n\n    return undefined;\n  }, applyEffectScope);\n};\n\nexports.useFsSynchronize = function (applyEffectScope, activateAllModifications) {\n  if (applyEffectScope === void 0) {\n    applyEffectScope = [];\n  }\n\n  if (activateAllModifications === void 0) {\n    activateAllModifications = false;\n  }\n\n  var _a = react_1.useContext(FlagshipContext_1.default),\n      state = _a.state,\n      setState = _a.setState,\n      hasError = _a.hasError;\n\n  react_1.useEffect(function () {\n    var fsVisitor = state.fsVisitor;\n\n    if (hasError) {\n      return safeModeLog(state.log, 'UseFsSynchronize');\n    }\n\n    if (!fsVisitor) {\n      reportNoVisitor(state.log);\n    } else {\n      fsVisitor.synchronizeModifications(activateAllModifications).then(function () {\n        if (setState) {\n          setState(__assign(__assign({}, state), {\n            fsVisitor: fsVisitor,\n            status: __assign(__assign({}, state.status), {\n              isLoading: false,\n              lastRefresh: new Date().toISOString()\n            })\n          }));\n        } else {\n          throw new Error('Error: useFsSynchronize > useEffect, setState is undefined');\n        }\n      });\n    }\n\n    return undefined;\n  }, applyEffectScope);\n};\n\nvar safeMode_getCacheModifications = function safeMode_getCacheModifications(modificationsRequested, activateAllModifications) {\n  if (activateAllModifications === void 0) {\n    activateAllModifications = false;\n  }\n\n  return modificationsRequested.reduce(function (reducer, modifRequested) {\n    var newReducer = __assign({}, reducer);\n\n    newReducer[modifRequested.key] = modifRequested.defaultValue;\n    return newReducer;\n  }, {});\n};\n\nvar getCacheModifications = function getCacheModifications(fsVisitor, modificationsRequested, activateAllModifications, log) {\n  if (activateAllModifications === void 0) {\n    activateAllModifications = false;\n  }\n\n  if (!fsVisitor) {\n    if (log) {\n      log.warn('fsVisitor not initialized, returns default value');\n    }\n\n    return safeMode_getCacheModifications(modificationsRequested, activateAllModifications);\n  }\n\n  return fsVisitor.getModifications(modificationsRequested, activateAllModifications);\n};\n\nexports.useFsModifications = function (modificationsRequested, activateAllModifications) {\n  if (activateAllModifications === void 0) {\n    activateAllModifications = false;\n  }\n\n  var _a = react_1.useContext(FlagshipContext_1.default),\n      _b = _a.state,\n      fsVisitor = _b.fsVisitor,\n      log = _b.log,\n      hasError = _a.hasError;\n\n  if (hasError) {\n    return safeMode_getCacheModifications(modificationsRequested, activateAllModifications);\n  }\n\n  return getCacheModifications(fsVisitor, modificationsRequested, activateAllModifications, log);\n};\n\nexports.useFlagship = function (options) {\n  var computedOptions = options ? options : {\n    modifications: {\n      requested: [],\n      activateAll: false\n    }\n  };\n  var _a = computedOptions.modifications,\n      modificationsRequested = _a.requested,\n      _b = _a.activateAll,\n      activateAllModifications = _b === void 0 ? false : _b;\n\n  var _c = react_1.useContext(FlagshipContext_1.default),\n      hasError = _c.hasError,\n      _d = _c.state,\n      fsVisitor = _d.fsVisitor,\n      status = _d.status,\n      log = _d.log;\n\n  if (hasError) {\n    return {\n      modifications: safeMode_getCacheModifications(modificationsRequested, activateAllModifications),\n      status: status,\n      hit: {\n        send: function send() {\n          safeModeLog(log, 'send hit');\n        },\n        sendMultiple: function sendMultiple() {\n          safeModeLog(log, 'send multiple hits');\n        }\n      }\n    };\n  }\n\n  var logSdkNotReady = function logSdkNotReady() {\n    if (log) {\n      log.error('SDK not ready yet.');\n    }\n  };\n\n  var send = function send(hit) {\n    if (fsVisitor && fsVisitor.sendHit) {\n      fsVisitor.sendHit(hit);\n    } else {\n      logSdkNotReady();\n    }\n  };\n\n  var sendMultiple = function sendMultiple(hits) {\n    if (fsVisitor && fsVisitor.sendHits) {\n      fsVisitor.sendHits(hits);\n    } else {\n      logSdkNotReady();\n    }\n  };\n\n  send.bind(fsVisitor);\n  sendMultiple.bind(fsVisitor);\n  return {\n    modifications: getCacheModifications(fsVisitor, modificationsRequested, activateAllModifications, log),\n    status: status,\n    hit: {\n      send: send,\n      sendMultiple: sendMultiple\n    }\n  };\n};","import React from 'react';\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport jsx from 'react-syntax-highlighter/dist/esm/languages/prism/jsx';\nimport { darcula } from 'react-syntax-highlighter/dist/esm/styles/prism';\nSyntaxHighlighter.registerLanguage('jsx', jsx);\n\ntype CodeBlockProps = {\n    className?: string;\n    codeString: string;\n};\n\nconst CodeBlock: React.FC<CodeBlockProps> = ({ className, codeString }) => {\n    return (\n        <div className={className}>\n            <SyntaxHighlighter\n                language=\"javascript\"\n                style={darcula}\n                showLineNumbers\n            >\n                {codeString}\n            </SyntaxHighlighter>\n        </div>\n    );\n};\n\nexport default CodeBlock;\n","import React, { useContext } from 'react';\nimport { Formik } from 'formik';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport { SettingContext, AppSettings } from '../../../../../../../App';\nimport JSONInput from 'react-json-editor-ajrm';\nimport locale from 'react-json-editor-ajrm/locale/en';\nconst PlayConfig: React.FC = () => {\n    const { currentSettings, setSettings } = useContext(\n        SettingContext\n    ) as AppSettings;\n\n    const [hasError, setError] = React.useState(false);\n    return (\n        <Formik\n            initialValues={{\n                envId: currentSettings.envId,\n                settings: currentSettings.sdkConfig\n            }}\n            validate={(values) => {\n                const errors: any = {};\n                if (!values.envId) {\n                    errors.envId = 'Required';\n                }\n                return errors;\n            }}\n            onSubmit={(values, { setSubmitting }) => {\n                setSubmitting(false);\n                setSettings({\n                    ...currentSettings,\n                    envId: values.envId,\n                    sdkConfig: { ...values.settings }\n                });\n            }}\n        >\n            {({\n                handleSubmit,\n                handleChange,\n                handleBlur,\n                setFieldValue,\n                values,\n                touched,\n                isValid,\n                errors\n            }) => (\n                <Form noValidate onSubmit={handleSubmit}>\n                    <Form.Group as={Col} md=\"12\" controlId=\"envIdForm\">\n                        <Form.Label>Environment ID</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            name=\"envId\"\n                            value={values.envId}\n                            onChange={handleChange}\n                            isValid={touched.envId && !errors.envId}\n                            isInvalid={!!errors.envId}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                            {errors.envId}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col} md=\"12\" controlId=\"settingsForm\">\n                        <Form.Label>\n                            \"<i>config</i>\" prop\n                        </Form.Label>\n                        <JSONInput\n                            id=\"settings\"\n                            placeholder={values.settings}\n                            locale={locale}\n                            height=\"550px\"\n                            width=\"100%\"\n                            onChange={({ error, jsObject }) => {\n                                if (!error) {\n                                    setFieldValue(\n                                        'settings',\n                                        jsObject || {},\n                                        true\n                                    );\n                                    setError(false);\n                                } else {\n                                    setError(true);\n                                }\n                            }}\n                            style={{\n                                body: {\n                                    fontSize: '16px'\n                                }\n                            }}\n                        />\n                    </Form.Group>\n                    <div className=\"flex justify-end ph3\">\n                        <Button\n                            disabled={hasError}\n                            variant=\"secondary\"\n                            type=\"submit\"\n                            style={{\n                                cursor: hasError ? 'not-allowed' : 'pointer'\n                            }}\n                        >\n                            Apply change\n                        </Button>\n                    </div>\n                </Form>\n            )}\n        </Formik>\n    );\n};\n\nexport default PlayConfig;\n","import React, { useContext } from 'react';\nimport { Formik } from 'formik';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport { SettingContext, AppSettings } from '../../../../../../../App';\nimport JSONInput from 'react-json-editor-ajrm';\nimport locale from 'react-json-editor-ajrm/locale/en';\n\nconst PlayVisitorData: React.FC = () => {\n    const { currentSettings, setSettings } = useContext(\n        SettingContext\n    ) as AppSettings;\n    const [hasError, setError] = React.useState(false);\n    return (\n        <Formik\n            initialValues={{\n                vId: currentSettings.visitorData.id,\n                vContext: currentSettings.visitorData.context\n            }}\n            validate={(values) => {\n                const errors: any = {};\n                if (!values.vId) {\n                    errors.vId = 'Required';\n                }\n                return errors;\n            }}\n            onSubmit={(values, { setSubmitting }) => {\n                setSubmitting(false);\n                setSettings({\n                    ...currentSettings,\n                    visitorData: {\n                        id: values.vId,\n                        context: values.vContext || {}\n                    }\n                });\n            }}\n        >\n            {({\n                handleSubmit,\n                handleChange,\n                handleBlur,\n                setFieldValue,\n                values,\n                touched,\n                isValid,\n                errors\n            }) => (\n                <Form noValidate onSubmit={handleSubmit}>\n                    <Form.Group as={Col} md=\"12\" controlId=\"validationFormik01\">\n                        <Form.Label>Visitor ID</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            name=\"vId\"\n                            value={values.vId}\n                            onChange={handleChange}\n                            isValid={touched.vId && !errors.vId}\n                            isInvalid={!!errors.vId}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                            {errors.vId}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col} md=\"12\" controlId=\"validationFormik02\">\n                        <Form.Label>Visitor Context</Form.Label>\n                        <JSONInput\n                            id=\"a_unique_id\"\n                            placeholder={values.vContext}\n                            locale={locale}\n                            height=\"550px\"\n                            width=\"100%\"\n                            onChange={({ error, jsObject }) => {\n                                if (!error) {\n                                    setFieldValue(\n                                        'vContext',\n                                        jsObject || {},\n                                        true\n                                    );\n                                    setError(false);\n                                } else {\n                                    setError(true);\n                                }\n                            }}\n                            style={{\n                                body: {\n                                    fontSize: '16px'\n                                }\n                            }}\n                        />\n                    </Form.Group>\n                    <div className=\"flex justify-end ph3\">\n                        <Button\n                            disabled={hasError}\n                            variant=\"secondary\"\n                            type=\"submit\"\n                            style={{\n                                cursor: hasError ? 'not-allowed' : 'pointer'\n                            }}\n                        >\n                            Apply change\n                        </Button>\n                    </div>\n                </Form>\n            )}\n        </Formik>\n    );\n};\n\nexport default PlayVisitorData;\n","import { FlagshipReactSdkConfig } from '../../../../dist';\n\nconst sdkSettings: FlagshipReactSdkConfig = {\n    fetchNow: true,\n    enableConsoleLogs: true,\n    enableErrorLayout: true,\n    nodeEnv: 'production'\n};\n\nconst config = {\n    envId: 'bn1ab7m56qolupi5sa0g',\n    sdkConfig: sdkSettings,\n    visitorData: {\n        id: 'test-vid',\n        context: { isAwesome: false, isEvil: false }\n    },\n    sandbox: {\n        config: {\n            fetchNow: true,\n            enableConsoleLogs: true,\n            enableErrorLayout: true\n        },\n        envId: ['bn1ab7m56qolupi5sa0g_fake_1', 'bn1ab7m56qolupi5sa0g_fake_2'],\n        nodeEnv: ['production', 'development'],\n        visitorId: ['test-vid', 'test-vid_2', 'test-vid_3']\n    }\n};\nexport default config;\n","import React, { useContext } from 'react';\nimport { Formik } from 'formik';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport {\n    SettingContext,\n    AppSettings,\n    SdkSettings\n} from '../../../../../../../App';\nimport JSONInput from 'react-json-editor-ajrm';\nimport locale from 'react-json-editor-ajrm/locale/en';\nimport config from '../../../../../../../config';\n\nconst PlayVisitorData: React.FC = () => {\n    const { currentSettings: currSettings, setSettings } = useContext(\n        SettingContext\n    ) as AppSettings;\n\n    const [newSettings, setNewSettings] = React.useState<SdkSettings>({\n        ...currSettings\n    });\n\n    const handleVisitorId = (e) =>\n        setNewSettings({\n            ...newSettings,\n            visitorData: {\n                ...newSettings.visitorData,\n                id: e.target.value\n            }\n        });\n\n    const handleVisitorContext = (e) => {\n        const node = JSON.parse(e.currentTarget.parentElement.innerText);\n        const temp = { ...newSettings };\n        if (e.currentTarget.checked) {\n            setNewSettings({\n                ...newSettings,\n                visitorData: {\n                    ...newSettings.visitorData,\n                    context: {\n                        ...newSettings.visitorData.context,\n                        [Object.keys(node)[0]]: true\n                    }\n                }\n            });\n        } else {\n            const keyToRemove = Object.keys(node)[0];\n            setNewSettings({\n                ...newSettings,\n                visitorData: {\n                    ...newSettings.visitorData,\n                    context: Object.entries(temp.visitorData.context).reduce(\n                        (reducer, [key, value]) => {\n                            if (key === keyToRemove) {\n                                if (\n                                    Object.keys(\n                                        config.visitorData.context\n                                    ).includes(keyToRemove)\n                                ) {\n                                    return { ...reducer, [key]: false };\n                                }\n                                return reducer;\n                            }\n                            return { ...reducer, [key]: value };\n                        },\n                        {}\n                    )\n                }\n            });\n        }\n    };\n    return (\n        <>\n            <Form>\n                <Form.Group\n                    controlId=\"initForm.ControlSelect2\"\n                    style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        marginLeft: '16px'\n                    }}\n                >\n                    <div>visitorId: </div>\n                    <Form.Control as=\"select\" onChange={handleVisitorId}>\n                        <option key={currSettings.visitorData.id}>\n                            {currSettings.visitorData.id}\n                        </option>\n                        {config.sandbox.visitorId\n                            .filter((i) => i != currSettings.visitorData.id)\n                            .map((id) => (\n                                <option key={id}>{id}</option>\n                            ))}\n                    </Form.Control>\n                </Form.Group>\n                <div className=\"fsAnchor\" id=\"playWithVisitorContext\" />\n                <Form.Group controlId=\"initForm.ControlSelect3\">\n                    <Form.Label>visitor context</Form.Label>\n                    {Object.entries({\n                        ...config.visitorData.context,\n                        ...newSettings.visitorData.context\n                    }).map(([key, value]) => (\n                        <Form.Check\n                            key={key}\n                            type=\"checkbox\"\n                            id={`default-${key}`}\n                            checked={\n                                newSettings.visitorData.context.hasOwnProperty(\n                                    key\n                                )\n                                    ? !!value\n                                    : false\n                            }\n                            onChange={handleVisitorContext}\n                            label={JSON.stringify({ [key]: value })}\n                        />\n                    ))}\n                </Form.Group>\n            </Form>\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'flex-end'\n                }}\n            >\n                <Button\n                    variant=\"secondary\"\n                    onClick={() => setSettings({ ...newSettings })}\n                >\n                    Apply change\n                </Button>\n            </div>\n        </>\n    );\n};\n\nexport default PlayVisitorData;\n","import React, { useContext } from 'react';\nimport { Formik } from 'formik';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport config from '../../../../../../../config';\nimport {\n    SettingContext,\n    SdkSettings,\n    AppSettings\n} from '../../../../../../../App';\nimport CodeBlock from '../../../../../../common/CodeBlock';\nconst PlayConfig: React.FC = () => {\n    const { currentSettings: currSettings, setSettings, QA } = useContext(\n        SettingContext\n    ) as AppSettings;\n    const [newSettings, setNewSettings] = React.useState<SdkSettings>({\n        ...currSettings\n    });\n\n    const handleEnvId = (e) =>\n        setNewSettings({ ...newSettings, envId: e.target.value });\n\n    const handleNodeEnv = (e) =>\n        setNewSettings({\n            ...newSettings,\n            sdkConfig: {\n                ...newSettings.sdkConfig,\n                nodeEnv: e.target.value\n            }\n        });\n    return (\n        <>\n            <Form>\n                <Form.Group\n                    controlId=\"initForm.Control1.1\"\n                    style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        marginLeft: '16px'\n                    }}\n                >\n                    <div>envId: </div>\n                    <Form.Control as=\"select\" onChange={handleEnvId}>\n                        <option key={newSettings.envId}>\n                            {newSettings.envId}\n                        </option>\n                        {config.sandbox.envId\n                            .filter((i) => i != newSettings.envId)\n                            .map((id) => (\n                                <option key={id}>{id}</option>\n                            ))}\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group\n                    controlId=\"initForm.Control1.11\"\n                    style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        marginLeft: '16px'\n                    }}\n                >\n                    <div>nodeEnv: </div>\n                    <Form.Control as=\"select\" onChange={handleNodeEnv}>\n                        <option key={newSettings.sdkConfig.nodeEnv}>\n                            {newSettings.sdkConfig.nodeEnv}\n                        </option>\n                        {config.sandbox.nodeEnv\n                            .filter((i) => i != newSettings.sdkConfig.nodeEnv)\n                            .map((id) => (\n                                <option key={id}>{id}</option>\n                            ))}\n                    </Form.Control>\n                </Form.Group>\n                {Object.keys({\n                    ...config.sandbox.config,\n                    ...newSettings.sdkConfig\n                })\n                    .filter((i) => i != 'nodeEnv')\n                    .map((setting) => (\n                        <Form.Group controlId={setting + 'Form'}>\n                            <Form.Check\n                                type=\"checkbox\"\n                                checked={\n                                    !!newSettings.sdkConfig[setting] || false\n                                }\n                                onChange={(e) => {\n                                    const toSubmit = {\n                                        ...newSettings,\n                                        sdkConfig: {\n                                            ...newSettings.sdkConfig,\n                                            [setting]: e.currentTarget.checked\n                                        }\n                                    };\n                                    if (\n                                        typeof newSettings.sdkConfig[setting] !=\n                                        'boolean'\n                                    ) {\n                                        delete toSubmit.sdkConfig[setting];\n                                    }\n                                    setNewSettings(toSubmit);\n                                }}\n                                label={`${setting}=${newSettings.sdkConfig[setting]}`}\n                            />\n                        </Form.Group>\n                    ))}\n            </Form>\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'flex-end'\n                }}\n            >\n                <Button\n                    variant=\"secondary\"\n                    onClick={() => setSettings({ ...newSettings })}\n                >\n                    Apply change\n                </Button>\n            </div>\n            <div>Since we have set those settings:</div>\n            <CodeBlock\n                className=\"mv3\"\n                codeString={`${JSON.stringify(\n                    currSettings.sdkConfig,\n                    null,\n                    2\n                )}`}\n            />\n            <div>\n                When you change those values, you can notice the behavior of the\n                SDK, on logs & network.\n            </div>\n            <div className=\"mb5\">\n                It will impact the output of Flagship SDK Hooks as well, take a\n                look below.\n            </div>\n        </>\n    );\n};\n\nexport default PlayConfig;\n","import CodeBlock from '../../../common/CodeBlock';\nimport React, { useContext } from 'react';\nimport { Alert, Button, Col, Form, Row } from 'react-bootstrap';\n\nimport { AppSettings, SdkSettings, SettingContext } from '../../../../App';\nimport config from '../../../../config';\nimport PlayConfigQA from './components/qa/PlayConfig';\nimport PlayVisitorDataQA from './components/qa/PlayVisitorData';\nimport PlayVisitorData from './components/normal/PlayVisitorData';\nimport PlayConfig from './components/normal/PlayConfig';\n\nexport const DemoInitialization = () => {\n    const name = 'initialization';\n    const { currentSettings: currSettings, setSettings, QA } = useContext(\n        SettingContext\n    ) as AppSettings;\n    const [newSettings, setNewSettings] = React.useState<SdkSettings>({\n        ...currSettings\n    });\n\n    return (\n        <Row>\n            <Col>\n                <div className=\"fsAnchor\" id={name} />\n                <Alert variant=\"dark\" className=\"fs-alert demoHook\">\n                    <Alert.Heading>{name}</Alert.Heading>\n                    <p>\n                        The <b>{name}</b> is proceed with{' '}\n                        <b>FlagshipProvider</b>. In this demo app, it is plugged\n                        like so:\n                    </p>\n                    <CodeBlock\n                        className=\"mv3\"\n                        codeString={`import React from 'react';\nimport { FlagshipProvider } from \"@flagship.io/react-sdk\";\n\nconst App: React.FC = () => (\n  <>\n      <FlagshipProvider\n      envId={${currSettings.envId}}\n      config={\n        ${JSON.stringify(currSettings.sdkConfig, null, 2)}\n      }\n      visitorData={\n        ${JSON.stringify(currSettings.visitorData, null, 2)}\n    }\n      onInitStart={() => {\n        console.log(\"init start\");\n      }}\n      onInitDone={() => {\n        console.log(\"init done\");\n      }}\n      onUpdate={({ fsModifications }) => {\n        console.log(\n            'React SDK updated with modifications:' + JSON.stringify(fsModifications)\n        );\n      }}\n      loadingComponent={\n        <Container className=\"mt3\">\n          <Row>\n            <Col xs={12}>Loading Flagship React SDK...</Col>\n          </Row>\n        </Container>\n      }\n    >\n      <Header />\n      <AppContainer />\n    </FlagshipProvider>\n  </>\n);          `}\n                    />\n                    <p>\n                        To understand impact of each props, you can change some\n                        value dynamically here:{' '}\n                    </p>\n                    <h3\n                        id=\"playWithConfig\"\n                        style={{\n                            borderBottom: '1px solid grey',\n                            marginBottom: '16px',\n                            paddingBottom: '8px'\n                        }}\n                    >\n                        1 - Playing with <i>config</i>\n                    </h3>\n                    {QA.enabled ? (\n                        <PlayConfigQA></PlayConfigQA>\n                    ) : (\n                        <PlayConfig></PlayConfig>\n                    )}\n                    <h3\n                        style={{\n                            borderBottom: '1px solid grey',\n                            marginBottom: '16px',\n                            paddingBottom: '8px'\n                        }}\n                    >\n                        2 - Playing with <i>visitorData</i>\n                    </h3>\n                    {QA.enabled ? (\n                        <PlayVisitorDataQA></PlayVisitorDataQA>\n                    ) : (\n                        <PlayVisitorData></PlayVisitorData>\n                    )}\n                </Alert>\n            </Col>\n        </Row>\n    );\n};\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport CodeBlock from '../../../../../common/CodeBlock';\nimport { useFsActivate } from '@flagship.io/react-sdk';\n\nconst PlayWithActivate: React.FC = () => {\n    const [toggle, setToggle] = React.useState(false);\n    useFsActivate(['color', 'unknownKey'], [toggle]);\n    const demoHookName = 'useFsActivate';\n    return (\n        <>\n            <p>\n                Use <b>{demoHookName}</b> hook to trigger activation of a\n                modification when needed:\n            </p>\n            <CodeBlock\n                className=\"mv3\"\n                codeString={`const [toggle, setToggle] = React.useState(false);\nuseFsActivate(['color','unknownKey'], [toggle]);\n\n// {...}\n\n<Button\nvariant=\"secondary\"\nonClick={() => setToggle(!toggle)}\n>\n    Trigger activate\n</Button>`}\n            />\n            <Button variant=\"secondary\" onClick={() => setToggle(!toggle)}>\n                Trigger activate\n            </Button>\n            <div className=\"mv3\">\n                <p>\n                    In this example, we're activating only when <i>toggle</i>{' '}\n                    value has changed as we have specified a 2nd argument in{' '}\n                    <i>useFsActivate</i> hook.\n                </p>\n                <p>\n                    We also specified in 1st argument that we want to activate 3\n                    keys. For each key, there is 2 possible scenarios:\n                </p>\n                <p>If the key exist, a http request \"activate\" will be done.</p>\n                <p>\n                    If the key does not exist, you will receive a warning log.\n                </p>\n            </div>\n        </>\n    );\n};\n\nexport default PlayWithActivate;\n","import React from 'react';\nimport { useFsModifications, useFsActivate } from '@flagship.io/react-sdk';\nimport { Button, Form, Col } from 'react-bootstrap';\nimport { Formik } from 'formik';\nimport JSONInput from 'react-json-editor-ajrm';\nimport locale from 'react-json-editor-ajrm/locale/en';\n\nconst PlayWithActivateQA: React.FC = () => {\n    const [hasError, setError] = React.useState(false);\n    const [toggle, setToggle] = React.useState(false);\n    const [modificationToActivate, setModificationToActivate] = React.useState([\n        'btnColor',\n        'otherKey1',\n        'otherKey2'\n    ]);\n    useFsActivate(modificationToActivate, [toggle]);\n    return (\n        <>\n            <Formik\n                initialValues={{\n                    modificationToActivate: modificationToActivate\n                }}\n                validate={(values) => {\n                    const errors: any = {};\n                    if (!values.modificationToActivate) {\n                        errors.modificationToActivate = 'Required';\n                    }\n                    return errors;\n                }}\n                onSubmit={(values, { setSubmitting }) => {\n                    setSubmitting(false);\n                    setModificationToActivate([\n                        ...values.modificationToActivate\n                    ]);\n                    setToggle(!toggle);\n                }}\n            >\n                {({\n                    handleSubmit,\n                    handleChange,\n                    handleBlur,\n                    setFieldValue,\n                    values,\n                    touched,\n                    isValid,\n                    errors\n                }) => (\n                    <Form noValidate onSubmit={handleSubmit}>\n                        <Form.Group as={Col} md=\"12\" controlId=\"settingsForm\">\n                            <Form.Label>\n                                useFsModifications arguments\n                            </Form.Label>\n                            <JSONInput\n                                id=\"modificationToActivate\"\n                                placeholder={values.modificationToActivate}\n                                locale={locale}\n                                height=\"550px\"\n                                width=\"100%\"\n                                onChange={({ error, jsObject }) => {\n                                    if (!error) {\n                                        setFieldValue(\n                                            'modificationToActivate',\n                                            jsObject || {},\n                                            true\n                                        );\n                                        setError(false);\n                                    } else {\n                                        setError(true);\n                                    }\n                                }}\n                                style={{\n                                    body: {\n                                        fontSize: '16px'\n                                    }\n                                }}\n                            />\n                        </Form.Group>\n                        <div className=\"flex justify-end ph3\">\n                            <Button\n                                disabled={hasError}\n                                variant=\"secondary\"\n                                type=\"submit\"\n                                style={{\n                                    cursor: hasError ? 'not-allowed' : 'pointer'\n                                }}\n                            >\n                                Trigger activate\n                            </Button>\n                        </div>\n                    </Form>\n                )}\n            </Formik>\n        </>\n    );\n};\n\nexport default PlayWithActivateQA;\n","import React, { useContext } from 'react';\nimport { Alert, Col, Row } from 'react-bootstrap';\nimport PlayWithActivate from './components/normal';\nimport { AppSettings, SettingContext } from '../../../../App';\nimport PlayWithActivateQA from './components/qa';\n\nexport const DemoUseFsActivate: React.FC = () => {\n    const demoHookName = 'useFsActivate';\n    const { QA } = useContext(SettingContext) as AppSettings;\n    return (\n        <Row>\n            <Col>\n                <div className=\"fsAnchor\" id={demoHookName} />\n                <Alert variant=\"dark\" className=\"fs-alert demoHook\">\n                    <Alert.Heading>{demoHookName}</Alert.Heading>\n                    {QA.enabled ? (\n                        <PlayWithActivateQA></PlayWithActivateQA>\n                    ) : (\n                        <PlayWithActivate></PlayWithActivate>\n                    )}\n                </Alert>\n            </Col>\n        </Row>\n    );\n};\n","import React from 'react';\nimport CodeBlock from '../../../../../../common/CodeBlock';\nimport { useFsModifications } from '@flagship.io/react-sdk';\nimport { Button } from 'react-bootstrap';\n\nconst PlayWithParams: React.FC = () => {\n    const fsModifications = useFsModifications([\n        {\n            key: 'color',\n            defaultValue: '#FF33E3',\n            activate: false\n        }\n    ]);\n    const demoHookName = 'useFsModifications';\n    return (\n        <>\n            <p>\n                Use <b>{demoHookName}</b> hook to get the modifications:\n            </p>\n            <CodeBlock\n                className=\"mv3\"\n                codeString={`import { useFsModifications } from '@flagship.io/react-sdk';\nconst fsModifications = useFsModifications([\n    {\n        key: 'color',\n        defaultValue: '#FF33E3',\n        activate: false\n    }\n]);`}\n            />\n            <p>Output: </p>\n            <div>\n                <Button\n                    variant=\"secondary\"\n                    style={{\n                        backgroundColor: fsModifications.color\n                    }}\n                >\n                    {`My color tells my visitor mood (backgroundColor=${fsModifications.color})`}\n                </Button>\n            </div>\n            <div className=\"mv3\">\n                Based on the campaign that we set on Flagship platform, the\n                color of the button will change depending values set in the{' '}\n                <a href=\"#playWithVisitorContext\">visitor context</a>.\n            </div>\n            <CodeBlock\n                className=\"mv3\"\n                codeString={`<Button\n    variant=\"secondary\"\n    style={{\n        backgroundColor: fsModifications.color\n    }}\n>\n    {\\`My color tells my visitor mood (backgroundColor=\\${fsModifications.color})\\`}\n</Button>`}\n            />\n        </>\n    );\n};\n\nexport default PlayWithParams;\n","import React from 'react';\nimport CodeBlock from '../../../../../../common/CodeBlock';\nimport { useFsModifications } from '@flagship.io/react-sdk';\nimport { Button, Form, Col } from 'react-bootstrap';\nimport { Formik } from 'formik';\nimport JSONInput from 'react-json-editor-ajrm';\nimport locale from 'react-json-editor-ajrm/locale/en';\n\nconst PlayWithParams: React.FC = () => {\n    const [hasError, setError] = React.useState(false);\n    const [fsParams, setFsParams] = React.useState([\n        {\n            key: 'btnColor',\n            defaultValue: 'green',\n            activate: false\n        }\n    ]);\n    const output = useFsModifications(fsParams);\n    return (\n        <>\n            <Formik\n                initialValues={{\n                    fsParams\n                }}\n                validate={(values) => {\n                    const errors: any = {};\n                    if (!values.fsParams) {\n                        errors.fsParams = 'Required';\n                    }\n                    return errors;\n                }}\n                onSubmit={(values, { setSubmitting }) => {\n                    setSubmitting(false);\n                    setFsParams([...values.fsParams]);\n                }}\n            >\n                {({\n                    handleSubmit,\n                    handleChange,\n                    handleBlur,\n                    setFieldValue,\n                    values,\n                    touched,\n                    isValid,\n                    errors\n                }) => (\n                    <Form noValidate onSubmit={handleSubmit}>\n                        <Form.Group as={Col} md=\"12\" controlId=\"settingsForm\">\n                            <Form.Label>\n                                useFsModifications arguments\n                            </Form.Label>\n                            <JSONInput\n                                id=\"fsParams\"\n                                placeholder={values.fsParams}\n                                locale={locale}\n                                height=\"550px\"\n                                width=\"100%\"\n                                onChange={({ error, jsObject }) => {\n                                    if (!error) {\n                                        setFieldValue(\n                                            'fsParams',\n                                            jsObject || {},\n                                            true\n                                        );\n                                        setError(false);\n                                    } else {\n                                        setError(true);\n                                    }\n                                }}\n                                style={{\n                                    body: {\n                                        fontSize: '16px'\n                                    }\n                                }}\n                            />\n                        </Form.Group>\n                        <div className=\"flex justify-end ph3\">\n                            <Button\n                                disabled={hasError}\n                                variant=\"secondary\"\n                                type=\"submit\"\n                                style={{\n                                    cursor: hasError ? 'not-allowed' : 'pointer'\n                                }}\n                            >\n                                Apply change\n                            </Button>\n                        </div>\n                    </Form>\n                )}\n            </Formik>\n            <div className=\"mv3 b\">useFsModifications output:</div>\n            <div className=\"mb3\">\n                <JSONInput\n                    id=\"fsOutput\"\n                    placeholder={output}\n                    locale={locale}\n                    height=\"550px\"\n                    viewOnly={true}\n                    width=\"100%\"\n                    style={{\n                        body: {\n                            fontSize: '16px'\n                        }\n                    }}\n                />\n            </div>\n        </>\n    );\n};\n\nexport default PlayWithParams;\n","import { useFsModifications } from '@flagship.io/react-sdk';\nimport React, { useContext } from 'react';\nimport { Alert, Col, Row, Button } from 'react-bootstrap';\nimport CodeBlock from '../../../common/CodeBlock';\nimport PlayWithParams from './components/normal/PlayWithParams';\nimport PlayWithParamsQA from './components/qa/PlayWithParams';\nimport { SettingContext, AppSettings } from '../../../../App';\n\nexport const DemoUseFsModifications = () => {\n    const demoHookName = 'useFsModifications';\n    const { QA } = useContext(SettingContext) as AppSettings;\n    return (\n        <Row>\n            <Col>\n                <div className=\"fsAnchor\" id={demoHookName} />\n                <Alert variant=\"dark\" className=\"fs-alert demoHook\">\n                    <Alert.Heading>{demoHookName}</Alert.Heading>\n                    {QA.enabled ? (\n                        <PlayWithParamsQA></PlayWithParamsQA>\n                    ) : (\n                        <PlayWithParams></PlayWithParams>\n                    )}\n                </Alert>\n            </Col>\n        </Row>\n    );\n};\n","import React from 'react';\nimport CodeBlock from '../../../../../common/CodeBlock';\nimport { Form } from 'react-bootstrap';\nimport { useFsSynchronize } from '@flagship.io/react-sdk';\n\nconst PlayWithSynchronize: React.FC = () => {\n    const demoHookName = 'useFsSynchronize';\n    const [listenedValue, setValue] = React.useState(false);\n    const [activateAllModifications, setActivate] = React.useState(false);\n    useFsSynchronize([listenedValue], activateAllModifications);\n    return (\n        <>\n            <CodeBlock\n                className=\"mv3\"\n                codeString={`useFsSynchronize([listenedValue], activateAllModifications);`}\n            ></CodeBlock>\n            <div>\n                When <b>listenedValue</b> value changed, it will update\n                modifications in cache (=synchronization).\n            </div>\n            <div className=\"mb3\">\n                You can also notice that enabling{' '}\n                <b>activateAllModifications</b> to true will modify the payload\n                sent to the Flagship API and thus trigger an activate.\n            </div>\n            <Form>\n                <Form.Group controlId=\"demoFsSynchronize.ControlSelect1\">\n                    <Form.Label>Playing with 1st argument</Form.Label>\n                    <Form.Check\n                        type=\"checkbox\"\n                        checked={listenedValue}\n                        onChange={(e) => setValue(e.currentTarget.checked)}\n                        label={`listenedValue=${listenedValue}`}\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"demoFsSynchronize.ControlSelect2\">\n                    <Form.Label>Playing with 2nd argument</Form.Label>\n                    <Form.Check\n                        type=\"checkbox\"\n                        checked={activateAllModifications}\n                        onChange={(e) => setActivate(e.currentTarget.checked)}\n                        label={`activateAllModifications=${activateAllModifications}`}\n                    />\n                </Form.Group>\n            </Form>\n        </>\n    );\n};\n\nexport default PlayWithSynchronize;\n","import { useFsSynchronize } from '@flagship.io/react-sdk';\nimport React from 'react';\nimport { Alert, Col, Form, Row } from 'react-bootstrap';\n\nimport CodeBlock from '../../../common/CodeBlock';\nimport PlayWithSynchronize from './components/normal';\n\nexport const DemoUseFsSynchronize: React.FC = () => {\n    const demoHookName = 'useFsSynchronize';\n    return (\n        <Row>\n            <Col>\n                <div className=\"fsAnchor\" id={demoHookName} />\n                <Alert variant=\"dark\" className=\"fs-alert demoHook\">\n                    <Alert.Heading>{demoHookName}</Alert.Heading>\n                    <PlayWithSynchronize></PlayWithSynchronize>\n                </Alert>\n            </Col>\n        </Row>\n    );\n};\n","import React from 'react';\nimport { Button, Nav } from 'react-bootstrap';\nimport CodeBlock from '../../../../../../common/CodeBlock';\nimport {\n    TransactionHit,\n    ScreenHit,\n    ItemHit,\n    EventHit\n} from '@flagship.io/js-sdk';\nimport { useFlagship } from '@flagship.io/react-sdk';\n\nconst PlayWithHits: React.FC = () => {\n    const { status: fsStatus, hit: fsHit } = useFlagship();\n    const multipleHitBundle = {\n        multipleCodeString: `<Button\n    onClick={() => {\n        const transactionHit = {\n            type: 'Transaction',\n            data: {\n                transactionId: '12451342423',\n                affiliation: 'myAffiliation',\n                totalRevenue: 999,\n                shippingCost: 888,\n                shippingMethod: 'myShippingMethod',\n                currency: 'myCurrency',\n                taxes: 1234444,\n                paymentMethod: 'myPaymentMethod',\n                itemCount: 2,\n                couponCode: 'myCOUPON',\n                documentLocation:\n                    'http%3A%2F%2Fabtastylab.com%2F60511af14f5e48764b83d36ddb8ece5a%2F',\n                pageTitle: 'myScreen'\n            }\n        };\n        const eventHit = {\n            type: 'Event',\n            data: {\n                category: 'User Engagement',\n                action: 'signOff',\n                label: 'yolo label ;)',\n                value: 123,\n                documentLocation:\n                    'http%3A%2F%2Fabtastylab.com%2F60511af14f5e48764b83d36ddb8ece5a%2F',\n                pageTitle: 'YoloTitle'\n            }\n        };\n        fsHit.sendMultiple([transactionHit, eventHit]);\n    }}\n>\n    Send multiple transaction hits\n</Button>`,\n        multipleComponent: (\n            <Button\n                variant=\"secondary\"\n                onClick={() => {\n                    const transactionHit = {\n                        type: 'Transaction',\n                        data: {\n                            transactionId: '12451342423',\n                            affiliation: 'myAffiliation',\n                            totalRevenue: 999,\n                            shippingCost: 888,\n                            shippingMethod: 'myShippingMethod',\n                            currency: 'myCurrency',\n                            taxes: 1234444,\n                            paymentMethod: 'myPaymentMethod',\n                            itemCount: 2,\n                            couponCode: 'myCOUPON',\n                            documentLocation:\n                                'http%3A%2F%2Fabtastylab.com%2F60511af14f5e48764b83d36ddb8ece5a%2F',\n                            pageTitle: 'myScreen'\n                        }\n                    } as {\n                        type: 'Transaction';\n                        data: TransactionHit;\n                    };\n                    const eventHit = {\n                        type: 'Event',\n                        data: {\n                            category: 'User Engagement',\n                            action: 'signOff',\n                            label: 'yolo label ;)',\n                            value: 123,\n                            documentLocation:\n                                'http%3A%2F%2Fabtastylab.com%2F60511af14f5e48764b83d36ddb8ece5a%2F',\n                            pageTitle: 'YoloTitle'\n                        }\n                    } as {\n                        type: 'Event';\n                        data: EventHit;\n                    };\n                    fsHit.sendMultiple([transactionHit, eventHit]);\n                }}\n            >\n                Send multiple mixed hits\n            </Button>\n        )\n    };\n    const transactionHitBundle = {\n        simpleCodeString: `<Button\n    onClick={() => {\n        const mockHit = {\n            type: 'Transaction',\n            data: {\n                transactionId: '12451342423',\n                affiliation: 'myAffiliation',\n                totalRevenue: 999,\n                shippingCost: 888,\n                shippingMethod: 'myShippingMethod',\n                currency: 'myCurrency',\n                taxes: 1234444,\n                paymentMethod: 'myPaymentMethod',\n                itemCount: 2,\n                couponCode: 'myCOUPON',\n                documentLocation:\n                    'http%3A%2F%2Fabtastylab.com%2F60511af14f5e48764b83d36ddb8ece5a%2F',\n                pageTitle: 'myScreen'\n            }\n        };\n        fsHit.send(mockHit);\n    }}\n>\n    Send a transaction hit\n</Button>`,\n        simpleComponent: (\n            <Button\n                variant=\"secondary\"\n                onClick={() => {\n                    const mockHit = {\n                        type: 'Transaction',\n                        data: {\n                            transactionId: '12451342423',\n                            affiliation: 'myAffiliation',\n                            totalRevenue: 999,\n                            shippingCost: 888,\n                            shippingMethod: 'myShippingMethod',\n                            currency: 'myCurrency',\n                            taxes: 1234444,\n                            paymentMethod: 'myPaymentMethod',\n                            itemCount: 2,\n                            couponCode: 'myCOUPON',\n                            documentLocation:\n                                'http%3A%2F%2Fabtastylab.com%2F60511af14f5e48764b83d36ddb8ece5a%2F',\n                            pageTitle: 'myScreen'\n                        }\n                    } as {\n                        type: 'Transaction';\n                        data: TransactionHit;\n                    };\n                    fsHit.send(mockHit);\n                }}\n            >\n                Send a transaction hit\n            </Button>\n        )\n    };\n    const screenHitBundle = {\n        simpleCodeString: `<Button\n    onClick={() => {\n        const mockHit = {\n            type: 'Screen',\n            data: {\n                documentLocation: 'http%3A%2F%2Fabtastylab.com%2F60511af14f5e48764b83d36ddb8ece5a%2F',\n                pageTitle: 'YoloScreen',\n            },\n        };\n        fsHit.send(mockHit);\n    }}\n>\n    Send a screen hit\n</Button>`,\n        simpleComponent: (\n            <Button\n                variant=\"secondary\"\n                onClick={() => {\n                    const mockHit = {\n                        type: 'Screen',\n                        data: {\n                            documentLocation:\n                                'http%3A%2F%2Fabtastylab.com%2F60511af14f5e48764b83d36ddb8ece5a%2F',\n                            pageTitle: 'YoloScreen'\n                        }\n                    } as {\n                        type: 'Screen';\n                        data: ScreenHit;\n                    };\n                    fsHit.send(mockHit);\n                }}\n            >\n                Send a screen hit\n            </Button>\n        )\n    };\n    const itemHitBundle = {\n        simpleCodeString: `<Button\n    onClick={() => {\n        const mockHit = {\n            type: 'Item',\n            data: {\n              transactionId: '12451342423',\n              name: 'yoloItem',\n              price: 999,\n              code: 'yoloCode',\n              category: 'yoloCategory',\n              quantity: 1234444,\n              documentLocation: 'http%3A%2F%2Fabtastylab.com%2F60511af14f5e48764b83d36ddb8ece5a%2F',\n              pageTitle: 'YoloScreen',\n            }\n        };\n        fsHit.send(mockHit);\n    }}\n>\n    Send a item hit\n</Button>`,\n        simpleComponent: (\n            <Button\n                variant=\"secondary\"\n                onClick={() => {\n                    const mockHit = {\n                        type: 'Item',\n                        data: {\n                            transactionId: '12451342423',\n                            name: 'yoloItem',\n                            price: 999,\n                            code: 'yoloCode',\n                            category: 'yoloCategory',\n                            quantity: 1234444,\n                            documentLocation:\n                                'http%3A%2F%2Fabtastylab.com%2F60511af14f5e48764b83d36ddb8ece5a%2F',\n                            pageTitle: 'YoloScreen'\n                        }\n                    } as {\n                        type: 'Item';\n                        data: ItemHit;\n                    };\n                    fsHit.send(mockHit);\n                }}\n            >\n                Send a item hit\n            </Button>\n        )\n    };\n\n    const eventHitBundle = {\n        simpleCodeString: `<Button\n    onClick={() => {\n        const mockHit = {\n            type: 'Event',\n            data: {\n                category: 'User Engagement',\n                action: 'signOff',\n                label: 'yolo label ;)',\n                value: 123,\n                documentLocation:\n                    'http%3A%2F%2Fabtastylab.com%2F60511af14f5e48764b83d36ddb8ece5a%2F',\n                pageTitle: 'YoloTitle'\n            }\n        };\n        fsHit.send(mockHit);\n    }}\n>\n    Send a page hit\n</Button>`,\n        simpleComponent: (\n            <Button\n                variant=\"secondary\"\n                onClick={() => {\n                    const mockHit = {\n                        type: 'Event',\n                        data: {\n                            category: 'User Engagement',\n                            action: 'signOff',\n                            label: 'yolo label ;)',\n                            value: 123,\n                            documentLocation:\n                                'http%3A%2F%2Fabtastylab.com%2F60511af14f5e48764b83d36ddb8ece5a%2F',\n                            pageTitle: 'YoloTitle'\n                        }\n                    } as {\n                        type: 'Event';\n                        data: EventHit;\n                    };\n                    fsHit.send(mockHit);\n                }}\n            >\n                Send a item hit\n            </Button>\n        )\n    };\n    const [currentTestedHit, setHitToTest] = React.useState<{\n        simpleCodeString: string;\n        simpleComponent: React.ReactNode;\n    }>(transactionHitBundle);\n    return (\n        <>\n            <div className=\"mb3\">\n                If you're not familiar with the payload that you should a\n                provide to the hit you want to send, you'll have all details\n                available in the{' '}\n                <a href=\"https://github.com/abtasty/flagship-react-sdk#shape-of-possible-hits-to-send\">\n                    SDK Hit documentation\n                </a>\n                .\n            </div>\n            <div>\n                <b>NOTE:</b>\n                <p>\n                    It is not necessary to provide parameters to{' '}\n                    <i>useFlagship</i> if your purpose is only to send hits.\n                </p>\n                <CodeBlock\n                    className=\"mv3\"\n                    codeString={`import { useFlagship } from '@flagship.io/react-sdk';\nconst { hit: fsHit } = useFlagship();`}\n                />\n            </div>\n            <p>Send a hit, demo: </p>\n            <Nav variant=\"tabs\" defaultActiveKey=\"hitTransaction\">\n                <Nav.Item>\n                    <Nav.Link\n                        eventKey=\"hitTransaction\"\n                        onClick={() => setHitToTest(transactionHitBundle)}\n                    >\n                        Transaction Hit\n                    </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                    <Nav.Link\n                        eventKey=\"hitScreen\"\n                        onClick={() => setHitToTest(screenHitBundle)}\n                    >\n                        Screen Hit\n                    </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                    <Nav.Link\n                        eventKey=\"hitEvent\"\n                        onClick={() => setHitToTest(eventHitBundle)}\n                    >\n                        Event Hit\n                    </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                    <Nav.Link\n                        eventKey=\"hitItem\"\n                        onClick={() => setHitToTest(itemHitBundle)}\n                    >\n                        Item Hit\n                    </Nav.Link>\n                </Nav.Item>\n            </Nav>\n            <CodeBlock\n                className=\"mv3\"\n                codeString={currentTestedHit.simpleCodeString}\n            />\n            <div>{currentTestedHit.simpleComponent}</div>\n            <div className=\"mt3\">Send multiple mixed hit, demo: </div>\n            <CodeBlock\n                className=\"mv3\"\n                codeString={multipleHitBundle.multipleCodeString}\n            />\n            <div>{multipleHitBundle.multipleComponent}</div>\n        </>\n    );\n};\n\nexport default PlayWithHits;\n","import React from 'react';\nimport { useFlagship } from '@flagship.io/react-sdk';\nimport CodeBlock from '../../../../../../common/CodeBlock';\nimport { Button, Form, Col, Nav } from 'react-bootstrap';\nimport { Formik } from 'formik';\nimport JSONInput from 'react-json-editor-ajrm';\nimport locale from 'react-json-editor-ajrm/locale/en';\nimport flagship from '@flagship.io/js-sdk';\n\nconst PlayWithHits: React.FC = () => {\n    const defaultTransactionHitPayload = {\n        type: 'Transaction',\n        data: {\n            transactionId: '12451342423',\n            affiliation: 'yoloAffiliation',\n            totalRevenue: 999,\n            shippingCost: 888,\n            shippingMethod: 'yoloShippingMethod',\n            currency: 'yoloCurrency',\n            taxes: 1234444,\n            paymentMethod: 'yoloPaymentMethod',\n            itemCount: 2,\n            couponCode: 'YOLOCOUPON',\n            documentLocation:\n                'http%3A%2F%2Fabtastylab.com%2F60511af14f5e48764b83d36ddb8ece5a%2F',\n            pageTitle: 'YoloScreen'\n        }\n    };\n    const defaultScreenHitPayload = {\n        type: 'Screen',\n        data: {\n            documentLocation:\n                'http%3A%2F%2Fabtastylab.com%2F60511af14f5e48764b83d36ddb8ece5a%2F',\n            pageTitle: 'YoloScreen'\n        }\n    };\n    const defaultEventHitPayload = {\n        type: 'Event',\n        data: {\n            category: 'User Engagement',\n            action: 'signOff',\n            label: 'yolo label ;)',\n            value: 123,\n            documentLocation:\n                'http%3A%2F%2Fabtastylab.com%2F60511af14f5e48764b83d36ddb8ece5a%2F',\n            pageTitle: 'YoloTitle'\n        }\n    };\n    const defaultItemHitPayload = {\n        type: 'Item',\n        data: {\n            transactionId: '12451342423',\n            name: 'yoloItem',\n            price: 999,\n            code: 'yoloCode',\n            category: 'yoloCategory',\n            quantity: 1234444,\n            documentLocation:\n                'http%3A%2F%2Fabtastylab.com%2F60511af14f5e48764b83d36ddb8ece5a%2F',\n            pageTitle: 'YoloScreen'\n        }\n    };\n    const payloads = {\n        transaction: defaultTransactionHitPayload,\n        screen: defaultScreenHitPayload,\n        event: defaultEventHitPayload,\n        item: defaultItemHitPayload\n    };\n    const [hasError, setError] = React.useState(false);\n    const [hasError2, setError2] = React.useState(false);\n    const [currentTestedHit, setHitToTest] = React.useState<string>(\n        'transaction'\n    );\n    const [hitPayload, setHitPayload] = React.useState(\n        payloads[currentTestedHit]\n    );\n\n    const [hitsPayload, setHitsPayload] = React.useState([\n        { ...payloads.transaction },\n        { ...payloads.screen },\n        { ...payloads.event },\n        { ...payloads.item }\n    ]);\n    React.useEffect(() => setHitPayload(payloads[currentTestedHit]), [\n        currentTestedHit\n    ]);\n    const { hit: fsHit } = useFlagship();\n    return (\n        <>\n            <p>Send a hit, demo: </p>\n            <Nav variant=\"tabs\" defaultActiveKey=\"hitTransaction\">\n                <Nav.Item>\n                    <Nav.Link\n                        eventKey=\"hitTransaction\"\n                        onClick={() => setHitToTest('transaction')}\n                    >\n                        Transaction Hit\n                    </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                    <Nav.Link\n                        eventKey=\"hitScreen\"\n                        onClick={() => setHitToTest('screen')}\n                    >\n                        Screen Hit\n                    </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                    <Nav.Link\n                        eventKey=\"hitEvent\"\n                        onClick={() => setHitToTest('event')}\n                    >\n                        Event Hit\n                    </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                    <Nav.Link\n                        eventKey=\"hitItem\"\n                        onClick={() => setHitToTest('item')}\n                    >\n                        Item Hit\n                    </Nav.Link>\n                </Nav.Item>\n            </Nav>\n            <Formik\n                enableReinitialize={true}\n                initialValues={{\n                    hitPayload\n                }}\n                validate={(values) => {\n                    const errors: any = {};\n                    if (!values.hitPayload) {\n                        errors.hitPayload = 'Required';\n                    }\n                    return errors;\n                }}\n                onSubmit={(values, { setSubmitting }) => {\n                    setSubmitting(false);\n                    setHitPayload({ ...values.hitPayload });\n                    fsHit.send({ ...values.hitPayload });\n                }}\n            >\n                {({\n                    handleSubmit,\n                    handleChange,\n                    handleBlur,\n                    setFieldValue,\n                    values,\n                    touched,\n                    isValid,\n                    errors\n                }) => (\n                    <Form noValidate onSubmit={handleSubmit}>\n                        <Form.Group as={Col} md=\"12\" controlId=\"settingsForm\">\n                            <Form.Label>\n                                {currentTestedHit} hit payload\n                            </Form.Label>\n                            <JSONInput\n                                id=\"hitPayload\"\n                                placeholder={values.hitPayload}\n                                locale={locale}\n                                height=\"550px\"\n                                width=\"100%\"\n                                onChange={({ error, jsObject }) => {\n                                    if (!error) {\n                                        setFieldValue(\n                                            'hitPayload',\n                                            jsObject || {},\n                                            true\n                                        );\n                                        setError(false);\n                                    } else {\n                                        setError(true);\n                                    }\n                                }}\n                                style={{\n                                    body: {\n                                        fontSize: '16px'\n                                    }\n                                }}\n                            />\n                        </Form.Group>\n                        <div className=\"flex justify-end ph3\">\n                            <Button\n                                disabled={hasError}\n                                variant=\"secondary\"\n                                type=\"submit\"\n                                style={{\n                                    cursor: hasError ? 'not-allowed' : 'pointer'\n                                }}\n                            >\n                                Send hit\n                            </Button>\n                        </div>\n                    </Form>\n                )}\n            </Formik>\n            <div className=\"mv3\">\n                Have a look to logs + network on your browser inspect tools to\n                see results.\n            </div>\n            <Formik\n                initialValues={{\n                    hitsPayload\n                }}\n                validate={(values) => {\n                    const errors: any = {};\n                    if (!values.hitsPayload) {\n                        errors.hitsPayload = 'Required';\n                    }\n                    return errors;\n                }}\n                onSubmit={(values, { setSubmitting }) => {\n                    setSubmitting(false);\n                    setHitsPayload([...values.hitsPayload]);\n                    fsHit.sendMultiple([\n                        ...values.hitsPayload\n                    ] as flagship.HitShape[]);\n                }}\n            >\n                {({\n                    handleSubmit,\n                    handleChange,\n                    handleBlur,\n                    setFieldValue,\n                    values,\n                    touched,\n                    isValid,\n                    errors\n                }) => (\n                    <Form noValidate onSubmit={handleSubmit}>\n                        <Form.Group as={Col} md=\"12\" controlId=\"settingsForm\">\n                            <Form.Label>sendMultiple argument</Form.Label>\n                            <JSONInput\n                                id=\"hitsPayload\"\n                                placeholder={values.hitsPayload}\n                                locale={locale}\n                                height=\"550px\"\n                                width=\"100%\"\n                                onChange={({ error, jsObject }) => {\n                                    if (!error) {\n                                        setFieldValue(\n                                            'hitsPayload',\n                                            jsObject || {},\n                                            true\n                                        );\n                                        setError2(false);\n                                    } else {\n                                        setError2(true);\n                                    }\n                                }}\n                                style={{\n                                    body: {\n                                        fontSize: '16px'\n                                    }\n                                }}\n                            />\n                        </Form.Group>\n                        <div className=\"flex justify-end ph3\">\n                            <Button\n                                disabled={hasError2}\n                                variant=\"secondary\"\n                                type=\"submit\"\n                                style={{\n                                    cursor: hasError2\n                                        ? 'not-allowed'\n                                        : 'pointer'\n                                }}\n                            >\n                                Send multiple hits\n                            </Button>\n                        </div>\n                    </Form>\n                )}\n            </Formik>\n        </>\n    );\n};\n\nexport default PlayWithHits;\n","import React from 'react';\nimport { useFlagship } from '@flagship.io/react-sdk';\nimport CodeBlock from '../../../../../../common/CodeBlock';\nimport { Button, Form, Col } from 'react-bootstrap';\nimport { Formik } from 'formik';\nimport JSONInput from 'react-json-editor-ajrm';\nimport locale from 'react-json-editor-ajrm/locale/en';\n\nconst PlayWithModifications: React.FC = () => {\n    const [hasError, setError] = React.useState(false);\n    const [fsParams, setFsParams] = React.useState({\n        modifications: {\n            requested: [\n                {\n                    key: 'btnColor',\n                    defaultValue: 'green',\n                    activate: false\n                }\n            ]\n        }\n    });\n    const output = useFlagship(fsParams);\n    const { modifications: fsModifications } = output;\n    return (\n        <>\n            <Formik\n                initialValues={{\n                    fsParams\n                }}\n                validate={(values) => {\n                    const errors: any = {};\n                    if (!values.fsParams) {\n                        errors.fsParams = 'Required';\n                    }\n                    return errors;\n                }}\n                onSubmit={(values, { setSubmitting }) => {\n                    setSubmitting(false);\n                    setFsParams({ ...values.fsParams });\n                }}\n            >\n                {({\n                    handleSubmit,\n                    handleChange,\n                    handleBlur,\n                    setFieldValue,\n                    values,\n                    touched,\n                    isValid,\n                    errors\n                }) => (\n                    <Form noValidate onSubmit={handleSubmit}>\n                        <Form.Group as={Col} md=\"12\" controlId=\"settingsForm\">\n                            <Form.Label>useFlagship arguments</Form.Label>\n                            <JSONInput\n                                id=\"fsParams\"\n                                placeholder={values.fsParams}\n                                locale={locale}\n                                height=\"550px\"\n                                width=\"100%\"\n                                onChange={({ error, jsObject }) => {\n                                    if (!error) {\n                                        setFieldValue(\n                                            'fsParams',\n                                            jsObject || {},\n                                            true\n                                        );\n                                        setError(false);\n                                    } else {\n                                        setError(true);\n                                    }\n                                }}\n                                style={{\n                                    body: {\n                                        fontSize: '16px'\n                                    }\n                                }}\n                            />\n                        </Form.Group>\n                        <div className=\"flex justify-end ph3\">\n                            <Button\n                                disabled={hasError}\n                                variant=\"secondary\"\n                                type=\"submit\"\n                                style={{\n                                    cursor: hasError ? 'not-allowed' : 'pointer'\n                                }}\n                            >\n                                Apply change\n                            </Button>\n                        </div>\n                    </Form>\n                )}\n            </Formik>\n            <div className=\"mv3 b\">useFlagship output:</div>\n            <div className=\"mb3\">\n                <JSONInput\n                    id=\"fsIutput\"\n                    placeholder={output}\n                    locale={locale}\n                    height=\"550px\"\n                    viewOnly={true}\n                    width=\"100%\"\n                    style={{\n                        body: {\n                            fontSize: '16px'\n                        }\n                    }}\n                />\n            </div>\n        </>\n    );\n};\n\nexport default PlayWithModifications;\n","import React from 'react';\nimport { useFlagship } from '@flagship.io/react-sdk';\nimport CodeBlock from '../../../../../../common/CodeBlock';\nimport { Button } from 'react-bootstrap';\n\nconst PlayWithModifications: React.FC = () => {\n    const fsParams = {\n        modifications: {\n            requested: [\n                {\n                    key: 'color',\n                    defaultValue: '#FF33E3',\n                    activate: false\n                }\n            ]\n        }\n    };\n    const output = useFlagship(fsParams);\n    const { modifications: fsModifications } = output;\n    return (\n        <>\n            <p>demo: </p>\n            <div>\n                <Button\n                    variant=\"secondary\"\n                    style={{\n                        backgroundColor: fsModifications.color\n                    }}\n                >\n                    {`I'm a button customized with Flagship (backgroundColor=${fsModifications.color})`}\n                </Button>\n            </div>\n            <div className=\"mv3\">\n                Based on the campaign that we set on Flagship platform, the\n                color of the button will change depending values set in the{' '}\n                <a href=\"#playWithVisitorContext\">visitor context</a>.\n            </div>\n            <CodeBlock\n                className=\"mv3\"\n                codeString={`<Button\n    variant=\"secondary\"\n    style={{\n        backgroundColor: fsModifications.color\n    }}\n>\n    {\\`My color tells my visitor mood (backgroundColor=\\${fsModifications.color})\\`}\n</Button>`}\n            />\n        </>\n    );\n};\n\nexport default PlayWithModifications;\n","import { useFlagship } from '@flagship.io/react-sdk';\nimport React, { useContext } from 'react';\nimport { Alert, Col, Row, Button, Nav } from 'react-bootstrap';\nimport CodeBlock from '../../../common/CodeBlock';\nimport { TransactionHit } from '@flagship.io/js-sdk';\nimport PlayWithHits from './components/normal/PlayWithHits';\nimport PlayWithHitsQA from './components/qa/PlayWithHits';\nimport { SettingContext, AppSettings } from '../../../../App';\nimport PlayWithModificationsQA from './components/qa/PlayWithModifications';\nimport PlayWithModifications from './components/normal/PlayWithModifications';\n\nexport const DemoUseFlagship = () => {\n    const fsParams = {\n        modifications: {\n            requested: [\n                {\n                    key: 'btnColor',\n                    defaultValue: 'green',\n                    activate: false\n                }\n            ]\n        }\n    };\n    const output = useFlagship(fsParams);\n    const { modifications: fsModifications } = output;\n    const { status: fsStatus, hit: fsHit } = useFlagship();\n    const demoHookName = 'useFlagship';\n    const { QA } = useContext(SettingContext) as AppSettings;\n    return (\n        <Row>\n            <Col>\n                <div className=\"fsAnchor\" id={demoHookName} />\n                <Alert variant=\"dark\" className=\"fs-alert demoHook\">\n                    <Alert.Heading>{demoHookName}</Alert.Heading>\n                    <p>\n                        Use <b>{demoHookName}</b> hook to get access to further\n                        stuff such as <i>modifications</i>, <i>sdk status</i>,{' '}\n                        <i>hits</i> :\n                    </p>\n                    <CodeBlock\n                        className=\"mv3\"\n                        codeString={`import { useFlagship } from '@flagship.io/react-sdk';\nconst fsParams = {\n    modifications: {\n        requested: [\n            {\n                key: 'btnColor',\n                defaultValue: 'green',\n                activate: false\n            }\n        ]\n    }\n}\nconst {\n    modifications: fsModifications,\n    status: fsStatus,\n    hit: fsHit,\n} = useFlagship(fsParams);`}\n                    />\n                    <h3>\n                        1 - Playing with <i>fsModifications</i>\n                    </h3>\n                    {QA.enabled ? (\n                        <PlayWithModificationsQA></PlayWithModificationsQA>\n                    ) : (\n                        <PlayWithModifications></PlayWithModifications>\n                    )}\n                    <h3>\n                        2 - Reading <i>fsStatus</i>\n                    </h3>\n\n                    <p>\n                        It gives you some information about the current status\n                        of the SDK:\n                    </p>\n                    <CodeBlock\n                        className=\"mv3\"\n                        codeString={`\nfsStatus=${JSON.stringify(fsStatus, null, 2)};\n                        `}\n                    />\n                    <div className=\"fsAnchor\" id=\"sendHits\"></div>\n                    <h3>\n                        3 - Playing with <i>hits</i>\n                    </h3>\n                    {QA.enabled ? (\n                        <PlayWithHitsQA></PlayWithHitsQA>\n                    ) : (\n                        <PlayWithHits></PlayWithHits>\n                    )}\n                </Alert>\n            </Col>\n        </Row>\n    );\n};\n","import React, { useContext } from 'react';\nimport { Alert, Col, Row, Button } from 'react-bootstrap';\nimport { SettingContext, AppSettings } from '../../../../App';\n\nexport const DemoErrorBoundary = () => {\n    const demoHookName = 'Safe Mode';\n    const [triggerError, setTriggerError] = React.useState(false);\n    React.useEffect(() => {\n        if (triggerError) {\n            throw new Error('Flagship - Creating an error just for test...');\n        }\n        setTriggerError(false);\n    }, [triggerError]);\n\n    const { currentSettings, setSettings, QA } = useContext(\n        SettingContext\n    ) as AppSettings;\n    return (\n        <Row>\n            <Col>\n                <div className=\"fsAnchor\" id=\"safeMode\" />\n                <Alert variant=\"dark\" className=\"fs-alert demoHook\">\n                    <Alert.Heading>{demoHookName}</Alert.Heading>\n                    <p>\n                        When an error occurs unexpectedly, the React SDK switch\n                        automatically into <b>{demoHookName}</b>. Thus, default\n                        value of modifications will always be returned.\n                        Moreover, other features will just log an error without\n                        crash.\n                    </p>\n                    <div>\n                        <Button\n                            variant=\"secondary\"\n                            onClick={() => {\n                                setTriggerError(true);\n                            }}\n                        >\n                            Throw an error\n                        </Button>\n                        {currentSettings.sdkConfig.nodeEnv === 'production' && (\n                            <div className=\"mv3\">\n                                <b>NOTE:</b> You might not see the banner\n                                because you are in 'production' environment. You\n                                need to change value of <i>nodeEnv</i> in{' '}\n                                <a href=\"#playWithConfig\">SDK settings</a>.\n                            </div>\n                        )}\n                        {!currentSettings.sdkConfig.enableErrorLayout && (\n                            <div className=\"mv3\">\n                                <b>NOTE:</b> You might not see the banner\n                                because the setting <i>enableErrorLayout</i> is\n                                disabled, you need to change the value in{' '}\n                                <a href=\"#playWithConfig\">SDK settings</a>.\n                            </div>\n                        )}\n                    </div>\n                </Alert>\n            </Col>\n        </Row>\n    );\n};\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\n\nimport { DemoInitialization } from './components/DemoInitialization';\nimport { DemoUseFsActivate } from './components/DemoUseFsActivate';\nimport { DemoUseFsModifications } from './components/DemoUseFsModifications';\nimport { DemoUseFsSynchronize } from './components/DemoUseFsSynchronize';\nimport { DemoUseFlagship } from './components/DemoUseFlagship';\nimport { DemoErrorBoundary } from './components/DemoErrorBoundary';\n\nexport const AppContainer: React.FC = () => {\n    return (\n        <Container className=\"mt3\">\n            <DemoInitialization />\n            <DemoUseFlagship />\n            <DemoUseFsModifications />\n            <DemoUseFsActivate />\n            <DemoUseFsSynchronize />\n            <DemoErrorBoundary />\n        </Container>\n    );\n};\n","import React, { useContext } from 'react';\nimport { Navbar, Nav, Form, NavDropdown } from 'react-bootstrap';\nimport Logo from '../../assets/Flagship-horizontal-product-white.png';\nimport { AppSettings, SettingContext } from '../../App';\n\nconst AppHeader: React.FC = () => {\n    const { QA, setQA } = useContext(SettingContext) as AppSettings;\n    const okEmoji = '✅';\n    return (\n        <>\n            <Navbar className=\"fsNavbar\" fixed=\"top\">\n                <Navbar.Brand\n                    href=\"https://github.com/abtasty/flagship-react-sdk\"\n                    className=\"flex item-center\"\n                >\n                    <img\n                        alt=\"Logo Flagship\"\n                        src={Logo}\n                        className=\"d-inline-block align-top logoAdjust\"\n                    />\n                    React SDK (Dev demo)\n                </Navbar.Brand>\n                <Nav className=\"mr-auto fsNav\">\n                    <Nav.Link href=\"#initialization\">Initialization</Nav.Link>\n                    <NavDropdown title=\"Hooks\" id=\"nav-dropdown\">\n                        <NavDropdown.Item eventKey=\"4.0\" href=\"#useFlagship\">\n                            useFlagship\n                        </NavDropdown.Item>\n                        <NavDropdown.Item\n                            eventKey=\"4.1\"\n                            href=\"#useFsModifications\"\n                        >\n                            useFsModifications\n                        </NavDropdown.Item>\n                        <NavDropdown.Item eventKey=\"4.2\" href=\"#useFsActivate\">\n                            useFsActivate\n                        </NavDropdown.Item>\n                        <NavDropdown.Item\n                            eventKey=\"4.3\"\n                            href=\"#useFsSynchronize\"\n                        >\n                            useFsSynchronize\n                        </NavDropdown.Item>\n                    </NavDropdown>\n                    <NavDropdown title=\"Features\" id=\"nav-dropdown\">\n                        <NavDropdown.Item eventKey=\"4.0\" href=\"#useFlagship\">\n                            Get modification(s)\n                        </NavDropdown.Item>\n                        <NavDropdown.Item eventKey=\"4.1\" href=\"#useFsActivate\">\n                            Activate modification(s)\n                        </NavDropdown.Item>\n                        <NavDropdown.Item eventKey=\"4.2\" href=\"#sendHits\">\n                            Send Hit(s)\n                        </NavDropdown.Item>\n                        <NavDropdown.Item\n                            eventKey=\"4.3\"\n                            href=\"#useFsSynchronize\"\n                        >\n                            Refresh modifications\n                        </NavDropdown.Item>\n                        <NavDropdown.Item eventKey=\"4.4\" href=\"#safeMode\">\n                            Safe Mode\n                        </NavDropdown.Item>\n                    </NavDropdown>\n                </Nav>\n\n                <Form inline>\n                    <NavDropdown title=\"QA mode\" id=\"nav-dropdown\">\n                        <NavDropdown.Item\n                            eventKey=\"10.0\"\n                            onClick={() => setQA({ ...QA, enabled: true })}\n                        >\n                            ON {QA.enabled && okEmoji}\n                        </NavDropdown.Item>\n                        <NavDropdown.Item\n                            eventKey=\"10.1\"\n                            onClick={() => setQA({ ...QA, enabled: false })}\n                        >\n                            OFF {!QA.enabled && okEmoji}\n                        </NavDropdown.Item>\n                    </NavDropdown>\n                    <Nav.Link href=\"https://github.com/abtasty/flagship-react-sdk\">\n                        Github\n                    </Nav.Link>\n                    <Nav.Link href=\"https://www.abtasty.com/solutions-product-teams/\">\n                        What is Flagship ?\n                    </Nav.Link>\n                </Form>\n            </Navbar>\n        </>\n    );\n};\nexport default AppHeader;\n","import React, { useContext } from 'react';\nimport { Formik } from 'formik';\nimport {\n    Navbar,\n    Nav,\n    Form,\n    NavDropdown,\n    Modal,\n    Col,\n    Button\n} from 'react-bootstrap';\nimport { SettingContext, AppSettings } from '../../../../App';\n\ndeclare type Props = {\n    onHide(): void;\n    show: boolean;\n};\n\nconst SettingsModal: React.FC<Props> = ({ onHide, show }) => {\n    return (\n        <>\n            <Modal\n                size=\"lg\"\n                show={show}\n                onHide={onHide}\n                aria-labelledby=\"example-modal-sizes-title-lg\"\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"example-modal-sizes-title-lg\">\n                        Edit SDK settings:\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>...</Modal.Body>\n            </Modal>\n        </>\n    );\n};\nexport default SettingsModal;\n","import React, { useContext } from 'react';\nimport { Navbar, Nav, Form, NavDropdown } from 'react-bootstrap';\nimport Logo from '../../assets/Flagship-horizontal-product-white.png';\nimport { AppSettings, SettingContext } from '../../App';\nimport SettingsModal from './components/SettingsModal';\n\nconst QaHeader: React.FC = () => {\n    const { QA, setQA } = useContext(SettingContext) as AppSettings;\n    if (!QA.enabled) {\n        return null;\n    }\n    return (\n        <>\n            <Navbar className=\"fsNavbar qaHeader\" fixed=\"top\">\n                <Navbar.Brand href=\"#\" className=\"flex item-center\">\n                    QA Mode: <span className=\"green\">Enabled</span>\n                </Navbar.Brand>\n                <Nav className=\"mr-auto fsNav\">\n                    {/* <Nav.Link\n                        onClick={() =>\n                            setQA({\n                                ...QA,\n                                show: { ...QA.show, settingsModal: true }\n                            })\n                        }\n                    >\n                        Edit settings\n                    </Nav.Link> */}\n                </Nav>\n\n                <Form inline>\n                    <Nav.Link onClick={() => setQA({ ...QA, enabled: false })}>\n                        Switch off\n                    </Nav.Link>\n                </Form>\n            </Navbar>\n            <SettingsModal\n                onHide={() =>\n                    setQA({ ...QA, show: { ...QA.show, settingsModal: false } })\n                }\n                show={QA.show.settingsModal}\n            ></SettingsModal>\n        </>\n    );\n};\nexport default QaHeader;\n","import './App.css';\n\nimport {\n    FlagshipProvider,\n    FlagshipReactSdkConfig\n} from '@flagship.io/react-sdk';\nimport React, { createContext, Dispatch, SetStateAction } from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\n\nimport { AppContainer } from './components/AppContainer';\nimport config from './config';\nimport AppHeader from './components/AppHeader';\nimport QaHeader from './components/QaHeader';\ninterface VisitorContext {\n    [key: string]: any;\n}\nexport interface SdkSettings {\n    envId: string;\n    sdkConfig: FlagshipReactSdkConfig;\n    visitorData: {\n        id: string;\n        context: VisitorContext;\n    };\n}\nexport interface AppSettings {\n    currentSettings: SdkSettings;\n    setSettings: Dispatch<SetStateAction<SdkSettings>>;\n    QA: QA;\n    setQA: Dispatch<SetStateAction<QA>>;\n}\n\nexport interface QA {\n    enabled: boolean;\n    show: {\n        settingsModal: boolean;\n    };\n}\n\nexport const SettingContext = createContext<AppSettings | null>(null);\n\nconst App: React.FC = () => {\n    const [currentSettings, setSettings] = React.useState<SdkSettings>({\n        envId: config.envId,\n        sdkConfig: { ...config.sdkConfig },\n        visitorData: { ...config.visitorData }\n    });\n    const [QA, setQA] = React.useState<QA>({\n        enabled: false,\n        show: {\n            settingsModal: false\n        }\n    });\n    return (\n        <>\n            <SettingContext.Provider\n                value={{ currentSettings, setSettings, QA, setQA }}\n            >\n                <FlagshipProvider\n                    envId={currentSettings.envId}\n                    config={currentSettings.sdkConfig}\n                    visitorData={currentSettings.visitorData}\n                    onInitStart={() => {\n                        console.log('React SDK init start');\n                    }}\n                    onInitDone={() => {\n                        console.log('React SDK init done');\n                    }}\n                    onUpdate={({ fsModifications }) => {\n                        console.log(\n                            'React SDK updated with modifications:\\n' +\n                                JSON.stringify(fsModifications)\n                        );\n                    }}\n                    loadingComponent={\n                        <Container className=\"mt5\">\n                            <Row>\n                                <Col\n                                    xs={12}\n                                    style={{\n                                        color: 'white',\n                                        height: '100vh',\n                                        fontSize: '5vw'\n                                    }}\n                                >\n                                    Loading Flagship React SDK...\n                                </Col>\n                            </Row>\n                        </Container>\n                    }\n                >\n                    <AppHeader />\n                    <QaHeader />\n                    <AppContainer />\n                </FlagshipProvider>\n            </SettingContext.Provider>\n        </>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n\n  return r;\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar js_sdk_1 = __importDefault(require(\"@flagship.io/js-sdk\"));\n\nvar loggerHelper_1 = __importDefault(require(\"./lib/loggerHelper\"));\n\nvar FlagshipErrorBoundary_1 = __importDefault(require(\"./FlagshipErrorBoundary\"));\n\nexports.initState = {\n  fsVisitor: null,\n  log: null,\n  fsModifications: null,\n  status: {\n    isLoading: true,\n    firstInitSuccess: null,\n    lastRefresh: null,\n    hasError: false\n  },\n  private: {\n    previousFetchedModifications: undefined\n  }\n};\nvar FlagshipContext = react_1.default.createContext({\n  state: __assign({}, exports.initState),\n  setState: null,\n  hasError: false\n});\n\nexports.FlagshipProvider = function (_a) {\n  var children = _a.children,\n      envId = _a.envId,\n      config = _a.config,\n      visitorData = _a.visitorData,\n      loadingComponent = _a.loadingComponent,\n      initialModifications = _a.initialModifications,\n      onSavingModificationsInCache = _a.onSavingModificationsInCache,\n      onInitStart = _a.onInitStart,\n      onInitDone = _a.onInitDone,\n      onUpdate = _a.onUpdate;\n  var id = visitorData.id,\n      context = visitorData.context;\n\n  var _b = react_1.useState(__assign(__assign({}, exports.initState), {\n    log: loggerHelper_1.default.getLogger(config),\n    private: __assign(__assign({}, exports.initState.private), {\n      previousFetchedModifications: initialModifications\n    })\n  })),\n      state = _b[0],\n      setState = _b[1];\n\n  var _c = react_1.useState({\n    hasError: false,\n    error: null\n  }),\n      errorData = _c[0],\n      setError = _c[1];\n\n  var _d = state.status,\n      isLoading = _d.isLoading,\n      firstInitSuccess = _d.firstInitSuccess,\n      fsVisitor = state.fsVisitor;\n\n  var tryCatchCallback = function tryCatchCallback(callback) {\n    try {\n      callback();\n    } catch (error) {\n      setError({\n        error: error,\n        hasError: true\n      });\n    }\n  };\n\n  var computedConfig = state.private.previousFetchedModifications ? __assign(__assign({}, config), {\n    initialModifications: __spreadArrays(state.private.previousFetchedModifications)\n  }) : config;\n  react_1.useEffect(function () {\n    var fsSdk = js_sdk_1.default.start(envId, computedConfig);\n    var visitorInstance = fsSdk.createVisitor(id, context);\n    setState(__assign(__assign({}, state), {\n      status: __assign(__assign({}, state.status), {\n        isLoading: true\n      }),\n      fsVisitor: visitorInstance\n    }));\n\n    if (onInitStart) {\n      tryCatchCallback(onInitStart);\n    }\n\n    visitorInstance.on('saveCache', function (args) {\n      if (onSavingModificationsInCache) {\n        tryCatchCallback(function () {\n          return onSavingModificationsInCache(args);\n        });\n      }\n    });\n    visitorInstance.on('ready', function () {\n      setState(__assign(__assign({}, state), {\n        status: __assign(__assign({}, state.status), {\n          isLoading: false,\n          lastRefresh: new Date().toISOString(),\n          firstInitSuccess: state.status.firstInitSuccess || new Date().toISOString()\n        }),\n        fsVisitor: visitorInstance,\n        fsModifications: visitorInstance.fetchedModifications || null,\n        private: {\n          previousFetchedModifications: visitorInstance.fetchedModifications || undefined\n        }\n      }));\n\n      if (onInitDone) {\n        tryCatchCallback(onInitDone);\n      }\n    });\n  }, [envId, id, JSON.stringify(config) + JSON.stringify(context)]);\n  react_1.useEffect(function () {\n    if (onUpdate) {\n      tryCatchCallback(function () {\n        onUpdate({\n          fsModifications: state.fsModifications\n        }, state.fsVisitor);\n      });\n    }\n  }, [state]);\n\n  var handleDisplay = function handleDisplay() {\n    var isFirstInit = !fsVisitor || !firstInitSuccess;\n\n    if (isLoading && loadingComponent && isFirstInit) {\n      return react_1.default.createElement(react_1.default.Fragment, null, loadingComponent);\n    }\n\n    return react_1.default.createElement(react_1.default.Fragment, null, children);\n  };\n\n  var handleError = function handleError(error) {\n    setError({\n      error: error,\n      hasError: !!error\n    });\n  };\n\n  return react_1.default.createElement(FlagshipContext.Provider, {\n    value: {\n      state: state,\n      setState: setState,\n      hasError: errorData.hasError\n    }\n  }, react_1.default.createElement(FlagshipErrorBoundary_1.default, {\n    customerChildren: children,\n    onError: handleError,\n    error: errorData.error,\n    sdkSettings: config,\n    log: state.log\n  }, handleDisplay()));\n};\n\nexports.FlagshipProvider.defaultProps = {\n  config: {\n    enableErrorLayout: false\n  },\n  loadingComponent: undefined,\n  initialModifications: undefined,\n  onInitStart: function onInitStart() {},\n  onInitDone: function onInitDone() {},\n  onSavingModificationsInCache: function onSavingModificationsInCache() {},\n  onUpdate: function onUpdate() {}\n};\nexports.FlagshipConsumer = FlagshipContext.Consumer;\nexports.default = FlagshipContext;\n\nexports.useFlagshipContext = function () {\n  return react_1.useContext(FlagshipContext);\n};","module.exports = __webpack_public_path__ + \"static/media/Flagship-horizontal-product-white.6e8b90f3.png\";","\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__export(require(\"./FlagshipContext\"));\n\n__export(require(\"./FlagshipHooks\"));"],"sourceRoot":""}